<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Cubernet'Blog]]></title>
  <subtitle><![CDATA[subtitle]]></subtitle>
  <link href="/blog/../atom.xml" rel="self"/>
  <link href="http://cubernet.cn/blog/"/>
  <updated>2015-04-15T18:17:41.000Z</updated>
  <id>http://cubernet.cn/blog/</id>
  
  <author>
    <name><![CDATA[Cubernet]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[随便说点什么]]></title>
    <link href="http://cubernet.cn/blog/new/"/>
    <id>http://cubernet.cn/blog/new/</id>
    <published>2015-03-27T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:41.000Z</updated>
    <content type="html"><![CDATA[<img src="http://7xikui.com1.z0.glb.clouddn.com/2015-02-28-newyear.jpg-blogpic" width="600" height="900">
<p>很久没有写一点东西，眼睛盯着屏幕，不知道该从何说起。</p>
<p>写上一篇博文的时候是在期末之前，到现在在家里背靠着床头为止，中间这段时间经历很多细小琐碎却让我觉得十足倒霉的事情。所谓吃一堑长一智，也算是买教训了。</p>
<a id="more"></a>
<p>从上次离家到这次回来，整整一年。还没来得及开寝室门，就被松哥喊去了上海，由此掀开了这一年的NSTL生活。说不上累，但也时不时的忙，六月的毕业和九月的开学与我无关，现在回头看一看，能想到的几个点，貌似只有怡然做手术、入职以及爸妈来成都。然后一晃就是一年，大家都说我还小，但我已经开始感觉到时间过得快的吓人。</p>
<h2 id="DOTA">DOTA</h2><p>一上来就讲dota，不是因为它最重要，而是在这一年里它给了我新的意义。从单排到开黑，从DOTA1到DOTA2，从本科到毕业，伴随着DOTA的成长我们也一起慢慢长大。那些本科的记忆，兄弟间的情谊，都和DOTA缠绕在一起。有时候仅仅是上线看铭铭或者建行打上一小会儿，那感觉好像又回到623站在他们身后一样。Pis或者09的视频下面经常有这样的留言，“现在工作了没时间打，但还是喜欢来看看视频，这是一种别人不能理解的怀念方式”。厅长经常说东哥当年打大鱼人、主任玩lion的故事。</p>
<p>DOTA，原来是很多人的青春。</p>
<h2 id="毕业">毕业</h2><p>计划着毕业旅行、计划着拍毕业照、计划着毕业聚餐，总以为很周全的计划，现在回头想想，才觉得毕业的那么仓促。我时不时的联系你们，希望我们不要忘记。</p>
<p>过年回来宝铁在帅府街宴请小团体。我从西城墙一路走过来，感觉每一步迈过去，都是一大段的回忆。东方广场周边的房子都拆了，我最终还是没机会请桐桐吃上一碗传说中的瓦罐面。一中门口卖盒饭的小房子已经岌岌可危，也是第一次去小房子对面的公厕。出门东拐去帅府街，那个消防队还在，以前在操场经常能听到这里的号声。丁字路口的电线杆子也在，当年就在这个路灯下，跟三儿说我好像考砸了，可能要去成都。这里往前是跟嘉琪海龟周末常去吃的兰州拉面，往右是三儿当年租的房子，高考后的那个暑假，在这里住了很久，吃了很多包子。</p>
<p>年后大聚餐去了一多半人，好多同学四年没见，谈不上激动，不过见到老同学的确挺开心。虽说现在分处天南海北，但还是想说，有事没事常联系。</p>
<h2 id="变老">变老</h2><p>人到了一定年纪之后就习惯把“老了”当做玩笑话挂在嘴边。可当真发现老了的时候，未必有多可笑。在外漂泊一年，除了明白钱难挣，屎难吃的道理之外，最大的感受就是时间过得太快。</p>
<p>今年回来发现爷爷脖子上的肉好像比去年更松了，爸爸的白头发更多了，前几天哥哥也当爸爸了。当时爷爷说了一句，“真快，你大姑也当奶奶了”。</p>
<p>我想我现在可能无法体会到一个人说自己的孩子当奶奶了的时候会是一种怎样的感受，但我知道，大家都变老了，我们所有人。</p>
<p>我翻着老照片，看着我们一点点变成长辈们年轻时的模样。</p>
<blockquote>
<p>门前老树长新芽/院里枯木又开花/半生存了好多话/藏进了满头白发</p>
<p>——《时间都去哪了》</p>
</blockquote>
<h2 id="幸福">幸福</h2><p>很久之前，偶然间进了羊蛋和晓波的情侣空间，记不清具体的等级了，总之那是个让我羡慕的数值，去年他们结婚了，我没能回来，再这里再次送上祝福。</p>
<p>倒不是我在孩子气的攀比谁的等级更高，而是我觉得，那是一点一滴的积累，那是平平淡淡的幸福。现在，我也拥有了这样的幸福。周一到周五工作学习打电话，周末一起吃遍成都玩转成都。偶尔还是会生气吵架，我也偶尔还是会孩子气不懂事，但我们现在拥有的是一份被两个人用心经营的很稳定的感情。即使天翻地覆，亦然心照不宣。这种感觉无法复制，更无法替代。我们会越走越好，点点滴滴都更好。从毕业来成都工作的那一刻起，你，甚至整个家庭对这份感情的付出我都看得到，也必定有回报。</p>
<p>说不清未来的路，但至少有陪伴，有幸福。</p>
<h2 id="博士">博士</h2><p>这不是荣誉。</p>
<p>待我脚踏实地干五年。</p>
<p>然后给你们讲这些年的故事。</p>
<hr>
<p>明天一早又要踏上去成都的路，临行前晚，躺在床上辗转难眠。回忆虽好，但难免伤感，略不符合新春氛围。</p>
<p>只希望大家都好。</p>
<p>来年见。</p>
]]></content>
    <summary type="html">
    <![CDATA[一篇拖了很久很久的年末总结]]>
    
    </summary>
    
      <category term="life" scheme="http://cubernet.cn/blog/tags/life/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[随便说点什么]]></title>
    <link href="http://cubernet.cn/blog/newyear/"/>
    <id>http://cubernet.cn/blog/newyear/</id>
    <published>2015-02-27T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:41.000Z</updated>
    <content type="html"><![CDATA[<img src="http://7xikui.com1.z0.glb.clouddn.com/2015-02-28-newyear.jpg-blogpic" width="600" height="900">
<p>很久没有写一点东西，眼睛盯着屏幕，不知道该从何说起。</p>
<p>写上一篇博文的时候是在期末之前，到现在在家里背靠着床头为止，中间这段时间经历很多细小琐碎却让我觉得十足倒霉的事情。所谓吃一堑长一智，也算是买教训了。</p>
<a id="more"></a>
<p>从上次离家到这次回来，整整一年。还没来得及开寝室门，就被松哥喊去了上海，由此掀开了这一年的NSTL生活。说不上累，但也时不时的忙，六月的毕业和九月的开学与我无关，现在回头看一看，能想到的几个点，貌似只有怡然做手术、入职以及爸妈来成都。然后一晃就是一年，大家都说我还小，但我已经开始感觉到时间过得快的吓人。</p>
<h2 id="DOTA">DOTA</h2><p>一上来就讲dota，不是因为它最重要，而是在这一年里它给了我新的意义。从单排到开黑，从DOTA1到DOTA2，从本科到毕业，伴随着DOTA的成长我们也一起慢慢长大。那些本科的记忆，兄弟间的情谊，都和DOTA缠绕在一起。有时候仅仅是上线看铭铭或者建行打上一小会儿，那感觉好像又回到623站在他们身后一样。Pis或者09的视频下面经常有这样的留言，“现在工作了没时间打，但还是喜欢来看看视频，这是一种别人不能理解的怀念方式”。厅长经常说东哥当年打大鱼人、主任玩lion的故事。</p>
<p>DOTA，原来是很多人的青春。</p>
<h2 id="毕业">毕业</h2><p>计划着毕业旅行、计划着拍毕业照、计划着毕业聚餐，总以为很周全的计划，现在回头想想，才觉得毕业的那么仓促。我时不时的联系你们，希望我们不要忘记。</p>
<p>过年回来宝铁在帅府街宴请小团体。我从西城墙一路走过来，感觉每一步迈过去，都是一大段的回忆。东方广场周边的房子都拆了，我最终还是没机会请桐桐吃上一碗传说中的瓦罐面。一中门口卖盒饭的小房子已经岌岌可危，也是第一次去小房子对面的公厕。出门东拐去帅府街，那个消防队还在，以前在操场经常能听到这里的号声。丁字路口的电线杆子也在，当年就在这个路灯下，跟三儿说我好像考砸了，可能要去成都。这里往前是跟嘉琪海龟周末常去吃的兰州拉面，往右是三儿当年租的房子，高考后的那个暑假，在这里住了很久，吃了很多包子。</p>
<p>年后大聚餐去了一多半人，好多同学四年没见，谈不上激动，不过见到老同学的确挺开心。虽说现在分处天南海北，但还是想说，有事没事常联系。</p>
<h2 id="变老">变老</h2><p>人到了一定年纪之后就习惯把“老了”当做玩笑话挂在嘴边。可当真发现老了的时候，未必有多可笑。在外漂泊一年，除了明白钱难挣，屎难吃的道理之外，最大的感受就是时间过得太快。</p>
<p>今年回来发现爷爷脖子上的肉好像比去年更松了，爸爸的白头发更多了，前几天哥哥也当爸爸了。当时爷爷说了一句，“真快，你大姑也当奶奶了”。</p>
<p>我想我现在可能无法体会到一个人说自己的孩子当奶奶了的时候会是一种怎样的感受，但我知道，大家都变老了，我们所有人。</p>
<p>我翻着老照片，看着我们一点点变成长辈们年轻时的模样。</p>
<blockquote>
<p>门前老树长新芽/院里枯木又开花/半生存了好多话/藏进了满头白发</p>
<p>——《时间都去哪了》</p>
</blockquote>
<h2 id="幸福">幸福</h2><p>很久之前，偶然间进了羊蛋和晓波的情侣空间，记不清具体的等级了，总之那是个让我羡慕的数值，去年他们结婚了，我没能回来，再这里再次送上祝福。</p>
<p>倒不是我在孩子气的攀比谁的等级更高，而是我觉得，那是一点一滴的积累，那是平平淡淡的幸福。现在，我也拥有了这样的幸福。周一到周五工作学习打电话，周末一起吃遍成都玩转成都。偶尔还是会生气吵架，我也偶尔还是会孩子气不懂事，但我们现在拥有的是一份被两个人用心经营的很稳定的感情。即使天翻地覆，亦然心照不宣。这种感觉无法复制，更无法替代。我们会越走越好，点点滴滴都更好。从毕业来成都工作的那一刻起，你，甚至整个家庭对这份感情的付出我都看得到，也必定有回报。</p>
<p>说不清未来的路，但至少有陪伴，有幸福。</p>
<h2 id="博士">博士</h2><p>这不是荣誉。</p>
<p>待我脚踏实地干五年。</p>
<p>然后给你们讲这些年的故事。</p>
<hr>
<p>明天一早又要踏上去成都的路，临行前晚，躺在床上辗转难眠。回忆虽好，但难免伤感，略不符合新春氛围。</p>
<p>只希望大家都好。</p>
<p>来年见。</p>
]]></content>
    <summary type="html">
    <![CDATA[一篇拖了很久很久的年末总结]]>
    
    </summary>
    
      <category term="life" scheme="http://cubernet.cn/blog/tags/life/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客新增阅读书单和观影列表子栏目]]></title>
    <link href="http://cubernet.cn/blog/readinglist/"/>
    <id>http://cubernet.cn/blog/readinglist/</id>
    <published>2014-10-22T16:00:00.000Z</published>
    <updated>2015-04-15T18:28:14.000Z</updated>
    <content type="html"><![CDATA[<p>前天下午无意中看到一个博客中的阅读书单栏目，觉得把自己读过的或准备读的书记录下来是一个很好的想法，于是决定在我这里也模仿实现一个。用了一天时间，现在基本上完成啦。</p>
<p>犹豫平时闲暇时间更多的用来看电影了<img src="http://cubernet.cn/assets/smilies/5.gif" id="smiley">，所以又特意增加了一个记录电影的<a id="more"></a>子栏目。以后大家就可以通过电脑（出于排版优化的问题，手机访问时左边的导航栏默认是不显示的）访问我博客的<a href="http://cubernet.cn/books/" target="_blank" rel="external">阅读书单</a>和<a href="http://cubernet.cn/movies/" target="_blank" rel="external">观影列表</a>来与我交流分享好看的书或者电影了。</p>
<p>这一天的时间里，整理资料和编写代码的时间基本上一半一半吧。先说整理资料的事情。</p>
<p>由于电影基本上都是陪女朋友一起去电影院看的，而且我们有收集电影票的习惯，所以如果只是简单的列出条目应该比较简单。但是书单就没这么容易了。小说类的图书基本上都是看的电子版，看过就删，所以现在已经很难想起这几年看过哪些小说了。技术类的图书基本都是买正版纸质书，所以列出来的也算比较全。唯一遗憾的是很多书都是读了一半就放在一边了。这个毛病要改正，那些没读完的书，也要抽时间一点一点读完。</p>
<p>重点说这个书单和观影列表技术实现方面的事情。</p>
<p>首先是网页模板这边的工作量。每个子栏目都需要建立一个总的统计页面，每个具体的列表页面，也和普通博文的页面样式不同。所以首先给这两类页面写了相应的模板，保存在_layouts文件夹下。然后在css文件中调整页面布局，最后在手机端测试，做手机端的浏览优化。整个流程下来，耗时约两小时。</p>
<p>当我私以为小屋已经搭好，马上就可以上线时才发现，书单内容和电影详情的录入是一件多么耗时耗力的事情。再加上栏目建立初期，需要同时统计过去几年内的东西，想起来就觉得可怕。</p>
<p>不过一想到万事开头难，便咬着牙开始一一录入。又过了不知好久，书单详情录入完毕。发布，刷新，恩，效果还算满意。<img src="http://cubernet.cn/assets/smilies/10.gif" id="smiley"></p>
<p>可是再当我录入一个电影详情再做测试时，发现图片竟然加载不了。一研究，原来是豆瓣电影对图片做了防盗链，页面上所有引用豆瓣电影的图片全部显示为X<img src="http://cubernet.cn/assets/smilies/15.gif" id="smiley">。没想到同属豆瓣，豆瓣读书和豆瓣电影竟然对图片的处理上相差了这么多，不知道是因为背后的技术团队不同还是出于版权的考虑。总之，对我而言，豆瓣的图我是没办法用了。如果说手动复制粘贴链接还能忍受的话，那么每个图片都要手动寻找链接，然后下载，然后改名、另存为，最后把本地链接写到页面上，这么一套全部手工实现的话，我想接下来这一周我都有事情做了。所以，我又自然而然的操起老本行，用爬虫帮我下载。</p>
<p>既然决定写脚本，不如全部工作就都由脚本来实现好了。于是有了如下的脚本：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-10-23-readinglist2.png-blogpic" alt="image"></p>
<p>脚本的源码可以在我github库中下载。简单说下实现思路及功能：</p>
<p>功能：</p>
<ul>
<li>根据输入的电影名称，自动在豆瓣电影中搜索该电影</li>
<li>从搜索结果中自动提取该电影的导演、主演等信息</li>
<li>根据输入的年份，将提取到的电影信息按到指定的格式追加写入到对应年份观影列表的.md文件中</li>
<li>将该电影的主题海报自动下载并归类保存在posters文件夹中，并将生成的链接加入到.md文件中</li>
</ul>
<p>实现思路：</p>
<ul>
<li>Python脚本实现</li>
<li>最基本的根据指定url爬取对应页面内容</li>
<li>将爬虫访问行为伪装成用户的浏览器访问行为</li>
<li>正则表达式提取关键字段</li>
<li>读取本地文件，并在指定位置追加写入新的内容</li>
<li>Python脚本命令行参数读取</li>
</ul>
<p>最终实现的效果是，我只需要<code>python douban.py -y 2014 -n 心花怒放 -p xhnf</code>这么一行命令，即可完成<code>心花怒放</code>的信息爬取、海报下载和观影列表文件内容的自动填充。于是，我用了几分钟，完成了三十多部电影信息的添加<img src="http://cubernet.cn/assets/smilies/28.gif" id="smiley">。</p>
<p>记得有人说过，人和猿最大的区别是是否懂得使用工具。我一直以为这句话的另一种表达方式是人会使用工具而猿不会。</p>
<p>看来我理解反了。<img src="http://cubernet.cn/assets/smilies/38.gif" id="smiley"></p>
]]></content>
    <summary type="html">
    <![CDATA[阅读书单 观影列表]]>
    
    </summary>
    
      <category term="Python" scheme="http://cubernet.cn/blog/tags/Python/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PVM环境配置]]></title>
    <link href="http://cubernet.cn/blog/pvm/"/>
    <id>http://cubernet.cn/blog/pvm/</id>
    <published>2014-10-13T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:49.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>并行计算机（pvm）是用于网络并行计算机上的软件工具。设计它的目的是将异构的计算机网络连接起来，使它使用起来就像一组分布式的并行处理器。</p>
<p>——百度百科</p>
</blockquote>
<p>PVM即Parallel Virtual Machine，并行虚拟计算机，是一个软件包，它能够把一些安装有Unix或Windows系统的计算机组成一个异构系统，使其用起来就像一个单一但能力强大的并行计算机。PVM支持的异构性分为三层：机器层、应用层和网络层。</p>
<a id="more"></a>
<h4 id="PVM的特点">PVM的特点</h4><ul>
<li>支持多用户及多任务</li>
<li>提供便于使用的通信原语</li>
<li>提出了进程组的概念</li>
<li>可无差别地运行在多种操作系统上</li>
<li>具有容错功能</li>
</ul>
<h4 id="PVM的安装">PVM的安装</h4><p>PVM是一套跨平台的软件系统，我是在Ubuntu Server 10.04.4版本下安装并测试的。</p>
<p>Ubuntu环境下安装PVM是一件十分简单的事情。只需要在终端中执行<code>$sudo apt-get install pvm</code>即可。</p>
<p>接下来，我们需要查看一下PVM安装在了系统的哪个位置。通常在/usr/lib/pvm3或/usr/local/lib/pvm3中。include文件夹在/usr/include路径下。</p>
<p>知道了安装路径后就可以在.bashrc文件中设置环境变量：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">export</span> PVM_ROOT=<span class="string">"/usr/lib/pvm3"</span></span><br><span class="line"><span class="built_in">export</span> PVM_ARCH=`<span class="variable">$PVM_ROOT</span>/lib/pvmgetarch`</span><br><span class="line"><span class="built_in">export</span> XPVM_ROOT=/usr/bin/xpvm</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$PVM_ROOT</span>/lib:/usr/include</span><br><span class="line"><span class="built_in">export</span> PVM_RSH=`<span class="built_in">which</span> ssh`</span><br></pre></td></tr></table></figure>
<p>在home目录下建立.rhosts文件，在rhost文件中列出当前可用的计算机名或者IP地址。</p>
<h4 id="PVM的使用">PVM的使用</h4><p>在终端中输入pvm，进入PVM的控制台界面。</p>
<blockquote>
<p>pvm&gt;</p>
</blockquote>
<p>如果有新的结点需要增加，则输入下面的命令：</p>
<blockquote>
<p>pvm&gt;add <hostname></hostname></p>
</blockquote>
<p>hostname是你想添加的计算机名称或者IP。</p>
<p>在PVM的终端界面还有很多交互命令，可以输入<code>help</code>来查看。</p>
<p>在这个网站上有一个基于PVM的矩阵乘法示例程序=》<a href="http://math.arizona.edu/~swig/documentation/pvm/matrix_mult/" target="_blank" rel="external">PVM Matrix Multiplication Example</a></p>
<p>下载上面提供的master.c、slave.c和Makefile.aimk文件，在本地编译：</p>
<pre><code><span class="title">aimk</span> mm_master mm_slave
</code></pre><p>如果编译成功了，则可以进入PVM中运行：</p>
<blockquote>
<p>pvm&gt;spawn -3 -&gt;mm_master</p>
</blockquote>
<p><code>spawn</code>是向PVM中加载任务。然后程序会自动运行，将计算结果保存在mat.out文件中。</p>
<h4 id="并行算法">并行算法</h4><p>上述示例程序中使用了外积算法，即每个结点每次独立运算得到结果矩阵C的一行数值：</p>
<p><img src="http://latex.codecogs.com/png.latex?C_{*j}=\(c_{1j},c_{2j},...,c_{mj}\" alt="image">%20^{\tau}%20=%20\sum<em>{k=1}^{n}(a</em>{1k},a<em>{2k},…,a</em>{mk})^{\tau}b_{kj},j=1,2,…,p)</p>
<blockquote>
<ul>
<li>矩阵a保存在master中；</li>
<li>矩阵b分别在每个slave结点只能中保存一份；</li>
<li>master把矩阵a的每一行发送给一个单独的slave；</li>
<li>如果结点数小于a的行数，则等待某些slave运算完成并返回结果时，再向其分发新的任务；</li>
<li>master在收到所有slave返回的结果后，把结果c保存在mat.out文件中。</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[PVM   并行计算   矩阵乘法]]>
    
    </summary>
    
      <category term="PVM" scheme="http://cubernet.cn/blog/tags/PVM/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Markdown中使用数学公式]]></title>
    <link href="http://cubernet.cn/blog/mdformath/"/>
    <id>http://cubernet.cn/blog/mdformath/</id>
    <published>2014-10-10T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:55.000Z</updated>
    <content type="html"><![CDATA[<p>上一博文是翻译的一篇学术论文，在用markdown语法编辑译文时，发现原文中出现的公式不知如何插入。</p>
<p>当然，能想到的一个简单的办法就是，把原文中的公式截图，然后在译文中插入图片。但是，作为一个天生爱折腾的工科男，这样的解决办法显然满足不了我。</p>
<a id="more"></a>
<p>用百度谷歌了一番之后发现，原来还真有别的办法。那就是将LaTex强大的数学公式排版能力与Markdown相结合。</p>
<p>第一步，将原文中的公式用Latex语法描述出来。</p>
<p>第二步，将这段LaTex语法描述的公式转化成图片插入到Markdown文本中。这里有两个可以调用的接口。</p>
<p>七十二松网站的Latex服务调用接口：</p>
<blockquote>
<p><a href="http://tex.72pines.com/latex.php?latex=$LaTeX公式代码$" target="_blank" rel="external">http://tex.72pines.com/latex.php?latex=$LaTeX公式代码$</a></p>
</blockquote>
<p>Google的Latex服务调用接口：</p>
<blockquote>
<p><a href="http://latex.codecogs.com/png.latex?LaTex公式代码" target="_blank" rel="external">http://latex.codecogs.com/png.latex?LaTex公式代码</a></p>
</blockquote>
<p>当然，看到这里，有些同学可能会说，用LaTex语法编写数学公式的门槛太高，需要太多时间去熟悉、记忆。其实你大可不必担心，推荐给大家一个很好的在线LaTex公式编辑器，<a href="http://www.codecogs.com/latex/eqneditor.php" target="_blank" rel="external"><strong>传送门</strong></a>。有了它，分分钟写出自己想要的LaTex公式不是梦。当然，这个网站也提供了丰富易用的调用接口，大家也可以直接利用。</p>
<hr>
<p>还有一种方法我没有尝试，但是整理在这里，供大家参考。其实也很简单，那就是使用<a href="http://www.mathjax.org" target="_blank" rel="external"><strong>MathJax</strong></a>，只需要在你的页面添加几行代码，就可以解析LaTex、MathML等语法描述的数学公式了。如果你用过，欢迎与我交流使用感受<img src="http://cubernet.cn/assets/smilies/16.gif" id="smiley">。</p>
]]></content>
    <summary type="html">
    <![CDATA[markdown latex]]>
    
    </summary>
    
      <category term="LaTex" scheme="http://cubernet.cn/blog/tags/LaTex/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【译】网络钓鱼检测：综述]]></title>
    <link href="http://cubernet.cn/blog/phishing-review/"/>
    <id>http://cubernet.cn/blog/phishing-review/</id>
    <published>2014-10-09T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:58.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://ijcsmc.com/docs/papers/February2014/V3I2201499a42.pdf" target="_blank" rel="external"><strong>原文地址</strong></a>： <a href="http://ijcsmc.com" target="_blank" rel="external">http://ijcsmc.com</a> /docs/papers/ February2014/ V3I2201499a42.pdf</p>
<p>作者：Feon Jaison1, Seenia Francis</p>
<p>感谢Feon Jaison1, Seenia Francis提供的优质文章。</p>
<p>这篇文章在我最近项目的完成过程中给予了很大的帮助，特在此表示感谢，并翻译之。</p>
<a id="more"></a>
<p>下面是译文内容：</p>
<p><strong>摘要</strong>：网络钓鱼是指通过电子邮件或其他网络聊天服务，试图窃取用户身份信息或银行卡号、密码等个人信息的行为。通常，攻击者会伪装成一个相关组织，引导受害者访问一个伪造的官方网站，进而通过这个钓鱼网站收集用户的个人信息。攻击者也会通过诱导用户点击内嵌在电子邮件中的链接使用户在未知情况下下载恶意软件。</p>
<p>研究者们提出了一些防止用户受到钓鱼攻击的方法。常见的方法有：防火墙技术、黑名单技术、垃圾邮件技术、假冒网站监测技术、客户端插件和用户安全意识教育等。每种现有的技术都有各自的利弊。如何自动识别钓鱼攻击目标是目前反钓鱼工作中最重要的问题。如果我们知道某个页面包含钓鱼攻击目标，我们就可以确认含有该目标的页面都是钓鱼页面。这可以帮助站长更好的识别钓鱼攻击，从而使他们能够立即采取必要的反制措施。</p>
<p><strong>关键词</strong>：钓鱼网站，分裂式聚类算法，分类</p>
<h3 id="1-介绍">1.介绍</h3><p>本文主要探讨钓鱼检测的重要性并对现有的几种检测方法做出评价。钓鱼攻击每年都给许多上网用户造成巨大损失。我们的目标是将基于人工的黑名单验证技术和具有低误报率的启发式方法相结合。所以，我们之后阐述的检测方法都是在人工验证黑名单的基础上，应用各种新的技术。从卡内基梅隆反网络钓鱼和网络分析工具中引入的功能在很大程度上与基于机器学习的网络钓鱼检测很相似。这种启发式检测通常都利用了URL相似度计算、域名概率评估、IP地址和端口号检测等技术。进一步，我们可以通过Google Page rank等第三方库，查询网站的排名、注册内容等其他信息。相比于之前基于签名的模型，这种方式显著的增加了钓鱼网站的检测效率。这种方法可以检测出各种含有钓鱼攻击和异常行为的网站。</p>
<p>网站的页面内容一方面能够很好地展现该站点的目的和意愿，另一方面也成为钓鱼欺诈信息的主要显示途径。目前，包括决策树、支持向量机、朴素贝叶斯分类、神经网络在内的很多机器学习算法已经被应用到检测模型的训练中，通过该模型来预测一个给定的网站是否为钓鱼站点。聚类和分类是数据挖掘的两个根本任务。分类是一种有监督的学习方法，而聚类是无监督的。聚类的目的是对现有数据做出描述，而分类则是做出预测。我们把相似的聚类实例数据划分到一个子集，不同的子集包含不同种类的数据。通过这种方式，将数据划分成具有高度代表性的若干子集。形式上，聚类结构被表示为一组子集。我们划分子集的依据是各个实例数据之间的距离。目前有两种常见的方法来估算两个数据之间的关系，分别是距离度量和相似性度量。许多聚类算法都是通过距离度量来判断数据之间的相似性。这里我们把Xi和Xj之间的距离表示为d(Xi,Xj)。</p>
<p>相似函数被认为是一种替代概念上的距离，即向量xi和xj的距离函数s(xi,xj)。这个函数应该是对称的，例如满足s(xi,xj)=s(xj,xi)。通过余弦函数求得两个向量的夹角作为衡量它们相似性的方法，归一化的向量内积也是一种有效的相似性度量方法。现有的基于黑/白名单的钓鱼模型的工作流程为，当用户访问一个网站时，反钓鱼工具首先在数据库中存储的黑名单内搜索该网站的地址。</p>
<p>如果数据库中包含该访问的网站地址，那么反钓鱼工具将引导用户避免钓鱼攻击。包括来自EarthLink的公司Scam Blocker,Phish Guard和Net craft等都是属于这一类型的工具。在基于规则的检测方法中，通过在软件中内置过滤规则，然后通过这些规则来检测一个网站的安全性。这种类型的工具包括斯坦福大学开发的Spoof Guard等。Spoof Guard会检查域名、URL，它也会检测电子邮件中的链接地址是否指向当前URL。一旦检测出当前访问网站的域名与某著名网站域名相似，或者该站点没有使用标准端口，Spoof Guard就会提醒用户小心钓鱼网站。这些工具都提供了浏览器插件，以便于通知用户当前访问的站点是否可信。</p>
<p>钓鱼网站智能检测是通过各种分类算法进行特征提取，进而基于特征提取模块对各种钓鱼网站特征的提取结果做层次化聚类。</p>
<p>1）特征提取是模式分类中的重要问题。这个过程包括了如何基于信息之间的相互性来选择有效的特征。由于直接执行最大相关性的条件非常苛刻，所以我们采用了一种叫做最小冗余-最大-相关准则的等效方式来用于一阶的增量特征选择。这个过程包括从N个样本中选择特征，例如，一个特征选择问题就是从M维观测空间R(M)，得到m个特征的子空间。</p>
<p>2）朴素贝叶斯分类认为所有这些属性对于“这种水果是苹果”推断的贡献是相互独立的。它只需要少量的训练数据来估计所需的分类参数，即基于均值和方差的朴素贝叶斯概率模型。该概率模型的分类器是由相关变量C在F1到Fn的若干特征变量作用下得出。</p>
<p>3）定义统计学习的最好方法称为有监督学习。在此，每个数据点都包含一个特征向量x和一个类标签y，并假定有一个函数f，使得y=f(x)满足每个训练数据点(x,y)。学习算法的目标是找到一个很好的近似ħ到f可以应用到分配标签到新的x值。函数h称为分类器，因为它以输入数据点×分配类标签y。有监督学习可以应用到许多问题，包括手写识别，医疗诊断。</p>
<p>4）聚类是一种用于将数据元素融入到相关组中的数据挖掘技术。数据挖掘通过分析不同的立体数据和所述数据，并对其进行分类、总结，最后将其转化为有用的信息。通常使用聚类分析，归纳，决策树等方法做分析，最流行的方法是将数据分成不相交的组。层次化聚类将测量2元组和其指定的集的成对距离的函数相异性之间的距离。</p>
<h3 id="2-应用">2.应用</h3><p>该反钓鱼软件可以部署在以下4种不同的场景中。</p>
<p>1）将反钓鱼过滤器集成在浏览器本身。</p>
<p>2）将反钓鱼过滤器集成在安全类软件中。</p>
<p>3）将反钓鱼软件集成在路由器中。</p>
<p>4）在电子邮件软件中集成反钓鱼过滤器，或者阻塞由虚拟主机服务器发送的电子邮件。</p>
<h3 id="3-结论">3.结论</h3><p>网络钓鱼已经成为一个严重的网络安全问题，每年对消费者和电子商务公司造成数十亿美元的经济损失。网络钓鱼攻击可以通过用户举报，图像监控，蜜罐以及其他技术相结合的方式来检测。通过广泛部署电子邮件认证技术，如发件人ID和加密签名，来降低网络钓鱼邮件被成功发送到用户邮箱的可能性。个人身份信息应包括在所有电子邮件通信系统中，并且系统应该允许用户输入或选择自定义文本和图像。基于浏览器插件的反钓鱼工具栏在识别钓鱼网站，检测到潜在的网络钓鱼网站时加高安全性等方面非常有效。</p>
<p><strong>REFERENCES</strong></p>
<p>1) Feature Selection Based on Mutual Information: Criteria of Max-Dependency, Max- Relevance, and Min- Redundancy Hanchuan Peng, Member, IEEE, Fuhui Long, and Chris Ding.</p>
<p>2) Hierarchical Clustering Algorithm - A Comparative Study,Dr.N.Rajalingam K.Ranjini Dept. of Management Studies.</p>
<p>3) CANTINA: A Content-Based Approach to Detecting PhishingWeb Sites.Yue Zhang Dept of Computer Science University of Pittsburgh 210 South Bouquet Street.</p>
<p>4) Naive Bayes Classifier.</p>
<p>5) Web Phishing Detection In Machine Learning Using Heuristic Image Based Method, Vinnarasi Tharania. I,<br>R. Sangareswari , M. Saleembabu International Journal of Engineering Research and Applications ISSN: 2248-9622</p>
]]></content>
    <summary type="html">
    <![CDATA[网络钓鱼 机器学习 聚类 分类]]>
    
    </summary>
    
      <category term="Phishing" scheme="http://cubernet.cn/blog/tags/Phishing/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开学记]]></title>
    <link href="http://cubernet.cn/blog/xiabb/"/>
    <id>http://cubernet.cn/blog/xiabb/</id>
    <published>2014-09-15T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:01.000Z</updated>
    <content type="html"><![CDATA[<p>作为一名资深老学生，本已没有心情再去关心开学放假这种逗小朋友的事情，但不得不承认今年开学这两周所经历的一些事还是让我有了很多感触。拟题<code>xiabb</code>，后又觉得有失风度，遂改为<code>开学记</code>。</p>
<p>感觉上一直是从年初3月份来校后一直忙过来的，虽然中间夹杂着毕业季和暑假，但对我来说貌似都是夹杂在忙碌中的很普通的日子。直到突然有一天收到系统发送的欢迎新生报道和提示新生缴费的短信时，才意识到，又开学了。</p>
<a id="more"></a>
<p>于是又看到在军训的大一，又看到在招新的大二，又看到在卖新生用品的大三和攻陷图书馆的大四。我骑着车飞速的穿越在人群中，眼中的每一幕都是曾经的自己。当然，我也像师兄师姐一样经历着他们的过去。水水的报道，水水的体检，贪婪的选课后又疯狂的逃课。</p>
<p>说到上课，我不知道现行的培养方案是出于何种考虑制定出来的。我只是觉得，这种为了学分而选课，为了上课而上课的方式，对学生的成长来说，收效甚微。再从学时上看，很多有意义有价值的课程都被设定为选修课，课堂上老师只能蜻蜓点水的讲，很快学时上完，然后草草收场。而另外一些相对基础相对简单的课程，却安排了大量的学时，所以90分钟的课堂编成了60分钟的瞎扯和30分钟的干货。试问，何不只安排学生听30分钟，把剩下的时间交给学生自己去做点有意义的事情呢？</p>
<p>我不是喜欢翘课，我只是觉得，在现在这种教学体制下，或许学校和老师也都出于无奈，但，我要为自己负责。</p>
<hr>
<p>前几天在河畔上看到一位毕业师兄发的帖子。帖子的内容大概是列举了几位本科班级上不同成绩同学毕业后的不同选择以及现状，然后和他自己作比较，得出结论是推荐出国和工作。恰逢最近也是大四决定保研出国的时间段，前来跟我讨论这个话题的同学也比较多。我的观点是，我们不能仅仅通过自己的例子或者身边几个师兄师姐的例子就简单的说工作好还是读研好，国内好还是国外好，读硕好还是读博好。我认为，能够决定你选择的只有你自己；换句话说，这个选择好不好，是要看人的。诚然国外的教育理念和教育水平要比国内很多院校都强，但是如果你英语烂到掉渣，如果你连国内普通学生最基本的水平都没有达到，那么你出国的意义是什么？难道仅仅是为了在朋友圈里发几张米国月亮的照片来刷存在感么？再说工作还是读研。见过很多在读研究生，整天啥事不干在那抱怨读研有多坑，那些工作的同学现在混的有多好，早知道当初不读研了之类的。试问，你只看到了那些同学辉煌的一面，你没看到的是当你还在考虑提前十分钟早退去食堂吃饭，当你还在跟导师“斗智斗勇”争取少做一点事情，当你还在睡懒觉刷网页时，你的那些同学在做什么。他们的辉煌是靠加班、靠付出一点一滴换来的。那些读研的同学中必定也有混的不错的。<code>使你变成现在这样的，不是当初的选择，而是自身的懒惰。</code>最后还有同学犹豫要不要读博。对于这个问题，我只想说，不要通过硕士和博士以后的待遇或发展来决定自己的选择。如果你是一个适合钻研耐得住独孤的人，那么如果只读硕士，你可能会发现没有一个很好的平台去支持你的研究。当然读博需要考虑更多的因素，时间、能力、感情、经济，等等。</p>
<p>说了这么多，实在是被问烦了，那些加了QQ上来就问选哪个挣钱多的人，我真心是恨不得直接拉黑。其实就是一句话，根据自己的客观条件，选择最适合自己的，然后<code>脚踏实地</code>做下去，今天吃的苦，以后笑着说出来就是了。当然，如果你有一个<code>脚踏实地</code>做下去的爹，那可以直接忽略以上所有。</p>
<hr>
<p>最后谈谈自己。再次从最近手上的这个项目中领略到，摆正态度是做好一件事情的先决条件。最近睡的比较晚，整天都在向科研大神看齐，琢磨着如何优化如何发文。自我感觉在方式方法上已算简单入门，坚持下去，那些想要的东西应该是早晚的事。继续加油。</p>
<hr>
<p>一不小心写了这么多，就像开篇说的一样都是xiabb，我是开玩笑的，您别当真。<img src="http://cubernet.cn/assets/smilies/37.gif" id="smiley"></p>
]]></content>
    <summary type="html">
    <![CDATA[记录开学两周的一些想法]]>
    
    </summary>
    
      <category term="Life" scheme="http://cubernet.cn/blog/tags/Life/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[墙里墙外]]></title>
    <link href="http://cubernet.cn/blog/overthewall/"/>
    <id>http://cubernet.cn/blog/overthewall/</id>
    <published>2014-08-20T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:04.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>秦筑长城比铁牢，蕃戎不敢过临洮。</p>
<p>虽然万里连云际，争及尧阶三尺高。</p>
<p>——《长城》【唐】汪遵</p>
</blockquote>
<p>“互联网”这个词现在已经逐渐为大众知晓，“长城”一词也自古就时常出没于文人骚<a id="more"></a>客的笔下，但是“互联网中的长城”即<code>GFW</code>，可能不是所有的人都听过。GFW即Great Firewall of China（翻译过来是长城防火墙），是我国在中国网络出口处部署的一套网络安全系统。</p>
<p><code>GFW</code>其实早已名声在外，在大众眼中，它的作用无非就是让国内的网民无法访问国外的网站，在一定程度上也不允许国外的网民访问国内的网站。从这个角度来看，这个防火墙以及它的主要创建者背负那么大的骂名也是可以理解的。作为网络安全实验室中的一员，我一直不愿对GFW做太多的评价。我只想说，GFW还是很有必要的，方校长也没有那么可恶。</p>
<hr>
<p>但是。</p>
<p>但是但是。</p>
<p>凡事要有度。要有度啊！</p>
<hr>
<p>最初，你们说不允许连接国外的H网<img src="http://cubernet.cn/assets/smilies/23.gif" id="smiley">无所谓啊，反正对外国人无感</p>
<p>然后，你们又说Facebook、Twitter也不要访问了，上面的反动言论太多<img src="http://cubernet.cn/assets/smilies/37.gif" id="smiley">无所谓啊，反正我也没有外国朋友</p>
<p>接着，包括Google在内的一大波常用网站开始沦陷，据说原因比较复杂，不能全怪GWF<img src="http://cubernet.cn/assets/smilies/7.gif" id="smiley">好吧，那我就勉强https访问谷歌香港呗，虽然好多博客访问不到了，至少还能访问Stack Overflow等等</p>
<p>最后，你们连同Stack Overflow、github、谷歌学术一起封了<img src="http://cubernet.cn/assets/smilies/33.gif" id="smiley">我只想说一个程序猿讨论编程问题的地方、一个程序猿分享代码的地方、一个程序猿搜索论文的地方，你TMD封个蛋蛋！大家都是程序猿，相煎何太急。</p>
<hr>
<p>不知道别人是什么情况，反正我有一种良民被逼上梁山的感觉，我这个胖子也不得不开始翻墙。不过，我还是觉得GFW是有必要存在的，只是没必要这么过分。想到最近爆出的各种后门、漏洞，好多<code>专家</code>又开始建议什么政府级办公电脑要采用国产操作系统啦，相关人员不许使用iPhone啦等等<img src="http://cubernet.cn/assets/smilies/10.gif" id="smiley">。同样的道理，不是说不需要防范国外的软硬件，而是要有个度，毕竟国内在相关领域很多地方都还是空白。你说不用Windows，难道要用DOS？<img src="http://cubernet.cn/assets/smilies/21.gif" id="smiley">不对，好像DOS也不是国产的。师夷长技以制夷，闭关锁国，一步之遥。</p>
<hr>
<p>好了，牢骚发泄完了，下面进入正题。</p>
<p>相信那些免费的翻墙软件大家都已经很熟悉了。相关的安装配置教程网上也是一搜一大把，这里就不再赘述。我想向大家推荐的是一个收费的VPN解决方案。相比于免费的翻墙工具，收费的不用担心流量、速度、稳定性等问题，个人觉得还是物有所值的。采用这套VPN及即将介绍的路由配置方法，可以达到国内国外网站访问VPN自动切换的效果，完全无感访问。<img src="http://cubernet.cn/assets/smilies/12.gif" id="smiley"></p>
<p>大家点击这个链接<a href="http://gjsq.me/1915340" target="_blank" rel="external"><strong>点击访问</strong></a>或者博客主页左侧栏中的购买按钮可以进入GreenVPN的主页进行了解或购买。算下来一个月大概十几块钱，前期注册即送200M体验流量，可以先体验后付费。</p>
<p>通过下载这个脚本<a href="https://code.google.com/p/chnroutes/wiki/Usage" target="_blank" rel="external"><strong>点击下载</strong></a>，可以让vpn客户端在进行连接的时候自动执行。通过这些路由脚本, 可以让用户在使用vpn作为默认网络网关的时候，不使用vpn进行对中国国内ip的访问，从而减轻vpn的负担，增加访问国内网站的速度。具体使用方法在下载页面有详细的说明，不同操作系统方法略有不同。</p>
<hr>
<p>有了这两个宝贝，从此便可以随意穿梭于墙里墙外了。友情提示，多读论文，少看小电影。当然，如果你觉得这个工具对你有用，建议点击我提供的链接访问GreenVPN进行购买，这样我会得到小额回报，就当是大家送我的二十二岁生日礼物了。<img src="http://cubernet.cn/assets/smilies/37.gif" id="smiley"></p>
]]></content>
    <summary type="html">
    <![CDATA[翻墙 GWF VPN]]>
    
    </summary>
    
      <category term="VPN" scheme="http://cubernet.cn/blog/tags/VPN/"/>
    
      <category term="翻墙" scheme="http://cubernet.cn/blog/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【译】在iOS上以root身份运行守护进程]]></title>
    <link href="http://cubernet.cn/blog/rootdaemon/"/>
    <id>http://cubernet.cn/blog/rootdaemon/</id>
    <published>2014-08-05T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:16.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://bbs.iosre.com/forum.php?mod=viewthread&amp;tid=204&amp;page=1&amp;extra=#pid1096" target="_blank" rel="external">原文地址</a>：<a href="http://bbs.iosre.com" target="_blank" rel="external">http://bbs.iosre.com</a> /forum.php? mod=viewthread &amp;tid=204&amp;page=1 &amp;extra=#pid1096</p>
<p>作者：snakeninny</p>
<p>感谢snakeninny提供的优质文章。</p>
<p>这篇文章在我最近项目的完成过程中给予了很大的帮助，特在此表示感谢，并翻译之。</p>
<a id="more"></a>
<p>下面是译文内容：</p>
<h2 id="第一部分_基础理论">第一部分 基础理论</h2><ol>
<li><p>守护进程</p>
<p> 什么是守护进程？根据<a href="http://http:en.wikipedia.org/wiki/Daemon" target="_blank" rel="external">wikipedia</a>的解释，守护进程是一个运行在计算机后台、不受前台用户交互影响的进程。通常，守护进程以字母<code>d</code>结尾，例如，syslogd是处理系统日志的后台进程，sshd是处理SSH链接请求服务的进程。你可以以<code>backboardd</code>,<code>mediaserverd</code>,<code>apsd</code>等 来命名iOS上的其他后台进程。 后台进程是由iOS上的第一个进程<code>launchd</code>启动的，launchd是开机时启动的第一个进程。那么守护进程能做什么呢？“它可以为网络请求，硬件活动以及一些处理其他任务的程序提供后台服务”。<strong>注意：以root身份运行的后台进程功能非常强大，并且非常隐蔽，很多时候也许超级管理员都不知道有一些后台进程在偷偷运行。所以，一些恶意软件就是以后台进程的形式存在的。这篇文章只是用来交流学习，如果你去做非法的事情，后果自负。</strong></p>
</li>
<li><p>守护进程的所有者</p>
<p> 守护进程是由launchd启动，通过“launchctl”命令加载配置文件。我们要特别注意在这个<a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/launchctl.1.html" target="_blank" rel="external">查询手册</a>中提到的，“LaunchAgents启动加载的每个配置文件必须属于启动加载它们的用户。所有的系统后台进程必须属于root用户。”配置文件不可以是属于“group-”或者任何人可写。这些限制是出于安全考虑，因为如果一个启动配置文件是任何人可写的话，那么就有可能出现在程序启动时配置文件被恶意修改的情况。因为后台进程是由launchd启动的，所以它应该属于root:wheel：</p>
<pre><code><span class="constant">Fun</span>Maker-<span class="number">5</span>:~ <span class="literal">root</span><span class="comment"># ls -l /sbin/launchd</span>
-r-xr-xr-x <span class="number">1</span> <span class="literal">root</span> wheel <span class="number">154736</span> <span class="constant">Nov</span>  <span class="number">8</span>  <span class="number">2013</span> /sbin/launchd
</code></pre></li>
</ol>
<h2 id="第二部分_组成">第二部分 组成</h2><p>正如在《iOS应用逆向工程》一书中提到的那样，后台进程包括两个部分，一个可执行的二进制文件和一个配置plist配置文件。下面，让我们利用Theos来创建一个可执行二进制文件：</p>
<pre><code><span class="atom">snakeninnys</span>-<span class="name">MacBook</span>:<span class="name">Code</span> <span class="atom">snakeninny</span>$ /<span class="atom">opt</span>/<span class="atom">theos</span>/<span class="atom">bin</span>/<span class="atom">nic</span>.<span class="atom">pl</span>
<span class="name">NIC</span> <span class="number">2.0</span> - <span class="name">New</span> <span class="name">Instance</span> <span class="name">Creator</span>
------------------------------
  [<span class="number">1.</span>] <span class="atom">iphone</span>/<span class="atom">application</span>
  [<span class="number">2.</span>] <span class="atom">iphone</span>/<span class="atom">cydget</span>
  [<span class="number">3.</span>] <span class="atom">iphone</span>/<span class="atom">framework</span>
  [<span class="number">4.</span>] <span class="atom">iphone</span>/<span class="atom">library</span>
  [<span class="number">5.</span>] <span class="atom">iphone</span>/<span class="atom">notification_center_widget</span>
  [<span class="number">6.</span>] <span class="atom">iphone</span>/<span class="atom">preference_bundle</span>
  [<span class="number">7.</span>] <span class="atom">iphone</span>/<span class="atom">sbsettingstoggle</span>
  [<span class="number">8.</span>] <span class="atom">iphone</span>/<span class="atom">tool</span>
  [<span class="number">9.</span>] <span class="atom">iphone</span>/<span class="atom">tweak</span>
  [<span class="number">10.</span>] <span class="atom">iphone</span>/<span class="atom">xpc_service</span>
<span class="name">Choose</span> <span class="atom">a</span> <span class="name">Template</span> (<span class="atom">required</span>): <span class="number">8</span>
<span class="name">Project</span> <span class="name">Name</span> (<span class="atom">required</span>): <span class="atom">rootdaemond</span>
<span class="name">Package</span> <span class="name">Name</span> [<span class="atom">com</span>.<span class="atom">yourcompany</span>.<span class="atom">rootdaemond</span>]: <span class="atom">com</span>.<span class="atom">iosre</span>.<span class="atom">rootdaemond</span>
<span class="name">Author</span>/<span class="name">Maintainer</span> <span class="name">Name</span> [<span class="atom">snakeninny</span>]: <span class="atom">snakeninny</span>
<span class="name">Instantiating</span> <span class="atom">iphone</span>/<span class="atom">tool</span> <span class="atom">in</span> <span class="atom">rootdaemond</span>/...
<span class="name">Done</span>.
</code></pre><p>然后修改main.mm文件的内容：</p>
<pre><code><span class="keyword">static</span> <span class="keyword">void</span> Reboot(<span class="built_in">CFNotificationCenterRef</span> center, <span class="keyword">void</span> *observer, <span class="built_in">CFStringRef</span> name, <span class="keyword">const</span>     <span class="keyword">void</span> *object, <span class="built_in">CFDictionaryRef</span> userInfo)
{
        <span class="built_in">NSLog</span>(<span class="string">@"iOSRE: reboot"</span>);
        system(<span class="string">"reboot"</span>);
}

<span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv, <span class="keyword">char</span> **envp)
{
        <span class="built_in">NSLog</span>(<span class="string">@"iOSRE: rootdaemond is launched!"</span>);
        <span class="built_in">CFNotificationCenterAddObserver</span>(<span class="built_in">CFNotificationCenterGetDarwinNotifyCenter</span>(), <span class="literal">NULL</span>, Reboot, <span class="built_in">CFSTR</span>(<span class="string">"com.iosre.rootdaemon.reboot"</span>), <span class="literal">NULL</span>,     <span class="built_in">CFNotificationSuspensionBehaviorCoalesce</span>);
        <span class="built_in">CFRunLoopRun</span>(); <span class="comment">// keep it running in background</span>
        <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre><p>现在，让我们处理配置文件。以“com.iosre.rootdaemond.plist”为文件名新建文件，然后将下面的代码写入文件中：</p>
<pre><code><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/    PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="title">dict</span>&gt;</span>
        <span class="tag">&lt;<span class="title">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
        <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
        <span class="tag">&lt;<span class="title">string</span>&gt;</span>com.iosre.rootdaemond<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Program<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
        <span class="tag">&lt;<span class="title">string</span>&gt;</span>/usr/bin/rootdaemond<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
        <span class="tag">&lt;<span class="title">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
        <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="title">plist</span>&gt;</span>
</code></pre><p>在这些键值对当中，<code>Label</code>键对应的是一个可以唯一标示你的后台进程的字符串，<code>Program</code>键对应的是可执行文件所在位置的绝对路径，这两个都是必填的。如果你的后台进程还有其他的参数，那么只需要在文件中增加类似下面这样的键值对即可：</p>
<pre><code><span class="tag">&lt;<span class="title">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">array</span>&gt;</span>
        <span class="tag">&lt;<span class="title">string</span>&gt;</span>arg1<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
        <span class="tag">&lt;<span class="title">string</span>&gt;</span>arg2<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
        <span class="tag">&lt;<span class="title">string</span>&gt;</span>more args...<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">array</span>&gt;</span>
</code></pre><p>在完成了这些之后，我们把这个配置文件保存在项目根目录下的/layout/Library/System/文件夹中。现在，我们的项目树看上去是这个样子的：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-08-06-rootdaemon2.png-blogpic" alt="image"></p>
<p>执行<code>make package</code>命令，然后检查deb所属的用户：</p>
<pre><code>snakeninnys-<span class="string">MacBook:</span>rootdaemond snakeninny$ dpkg-deb -c <span class="regexp">/Users/</span>snakeninny<span class="regexp">/Code/</span>    rootdaemond/com.iosre.rootdaemond_1.0-<span class="number">1</span>_iphoneos-arm.deb 
drwxr-xr-x snakeninny<span class="regexp">/staff  0 2014-05-11 15:52 ./</span>
drwxr-xr-x snakeninny<span class="regexp">/staff  0 2014-05-11 14:45 ./</span>Library/
drwxr-xr-x snakeninny<span class="regexp">/staff  0 2014-05-11 15:48 ./</span>Library<span class="regexp">/LaunchDaemons/</span>
-rwxr-xr-x snakeninny<span class="regexp">/staff 367 2014-05-11 15:37 ./</span>Library<span class="regexp">/LaunchDaemons/</span>    com.iosre.rootdaemond.plist
drwxr-xr-x snakeninny<span class="regexp">/staff   0 2014-05-11 15:52 ./</span>usr/
drwxr-xr-x snakeninny<span class="regexp">/staff   0 2014-05-11 15:52 ./</span>usr<span class="regexp">/bin/</span>
-rwxr-xr-x snakeninny<span class="regexp">/staff 197984 2014-05-11 15:52 ./</span>usr<span class="regexp">/bin/</span>rootdaemond
</code></pre><p>可以看到，deb中的所有文件都是属于snakeninny:staff的。还记得在第一部分中提到，后台进程必须属于root用户吗？所以，这个后台进程所属的用户不对，当你运行时将会报错。</p>
<p>这是为什么呢？因为这个deb文件是在OSX上打包的，所以它所属的用户就是snakeninny。为了将它的所属用户改为root:wheel，我们需要一个叫做<a href="https://github.com/DHowett/fauxsu" target="_blank" rel="external">fauxsu</a>的工具。下载这个工具，将解压得到的fauxsu和libfauxsu.dylib复制到<code>$THEOS/bin/</code> 目录下，然后运行<code>chmod a+x</code>。重新打包检查一次：</p>
<pre><code>snakeninnys-<span class="string">MacBook:</span>rootdaemond snakeninny$ dpkg-deb -c <span class="regexp">/Users/</span>snakeninny<span class="regexp">/Code/</span>    rootdaemond/com.iosre.rootdaemond_1.0-<span class="number">2</span>_iphoneos-arm.deb 
drwxr-xr-x root<span class="regexp">/wheel        0 2014-05-11 16:05 ./</span>
drwxr-xr-x root<span class="regexp">/wheel        0 2014-05-11 14:45 ./</span>Library/
drwxr-xr-x root<span class="regexp">/wheel        0 2014-05-11 15:48 ./</span>Library<span class="regexp">/LaunchDaemons/</span>
-rwxr-xr-x root<span class="regexp">/wheel      367 2014-05-11 15:37 ./</span>Library<span class="regexp">/LaunchDaemons/</span>    com.iosre.rootdaemond.plist
drwxr-xr-x root<span class="regexp">/wheel        0 2014-05-11 16:05 ./</span>usr/
drwxr-xr-x root<span class="regexp">/wheel        0 2014-05-11 16:05 ./</span>usr<span class="regexp">/bin/</span>
-rwxr-xr-x root<span class="regexp">/wheel   197984 2014-05-11 16:05 ./</span>usr<span class="regexp">/bin/</span>rootdaemond
</code></pre><p>现在，文件所属用户是正确的了。执行<code>make install</code>来安装这个后台进程：</p>
<pre><code>snakeninnys-MacBook:rootdaemond snakeninny$ make install
install<span class="class">.exec</span> <span class="string">"cat &gt; /tmp/_theos_install.deb; dpkg -i /tmp/_theos_install.deb &amp;&amp; rm /tmp/    _theos_install.deb"</span> &lt; <span class="string">"./com.iosre.rootdaemond_1.0-2_iphoneos-arm.deb"</span>
Selecting previously deselected package com<span class="class">.iosre</span><span class="class">.rootdaemond</span>.
(Reading database ... <span class="number">2589</span> files and directories currently installed.)
Unpacking com<span class="class">.iosre</span><span class="class">.rootdaemond</span> (from /tmp/_theos_install.deb) ...
Setting up com<span class="class">.iosre</span><span class="class">.rootdaemond</span> (<span class="number">1.0</span>-<span class="number">2</span>) ...
</code></pre><h2 id="第三部分_测试">第三部分 测试</h2><p>重启手机检查后台进程是否启动：</p>
<pre><code><span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># reboot</span>
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># Connection to 192.168.1.101 closed by remote host.</span>
<span class="constant">Connection</span> to <span class="number">192.168</span>.<span class="number">1.101</span> closed.
snakeninnys-<span class="constant">MacBook</span><span class="symbol">:Code</span> snakeninny<span class="variable">$ </span>ssh root<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">101</span>
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># grep iOSRE /var/log/syslog</span>
<span class="constant">May</span> <span class="number">11</span> <span class="number">16</span><span class="symbol">:</span><span class="number">14</span><span class="symbol">:</span><span class="number">01</span> <span class="constant">FunMaker</span>-<span class="number">5</span> rootdaemond[<span class="number">20</span>]<span class="symbol">:</span> <span class="symbol">iOSRE:</span> rootdaemond is launched!
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># ps -e | grep rootdaemond</span>
   <span class="number">20</span> ??         <span class="number">0</span><span class="symbol">:</span><span class="number">00</span>.<span class="number">13</span> /usr/bin/rootdaemond
  <span class="number">370</span> ttys00<span class="number">0</span>    <span class="number">0</span><span class="symbol">:</span><span class="number">00</span>.<span class="number">01</span> grep rootdaemond
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment">#</span>
</code></pre><p>我们可以看到，rootdaemond开机自动启动，并且保持在后台运行。最后，我们检查一下它是否在像预期的那样运行：</p>
<pre><code><span class="comment">// compile: clang -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS7.0.sdk -o iOSRERootDaemonTester -arch armv7 /Users/snakeninny/main.mm</span>

<span class="preprocessor">#<span class="keyword">include</span> &lt;notify.h&gt;</span>

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span>
</span>{
        notify_post(<span class="string">"com.iosre.rootdaemon.reboot"</span>);
        <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre><p>用scp命令将iOSRERootDaemonTester复制到iOS上，然后运行：</p>
<pre><code>snakeninnys-<span class="constant">MacBook</span><span class="symbol">:~</span> snakeninny<span class="variable">$ </span>scp iOSRERootDaemonTester root<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">101</span><span class="symbol">:/var/tmp/</span>
iOSRERootDaemonTester                         <span class="number">100</span>%   <span class="number">48</span>KB  <span class="number">48.3</span>KB/s   <span class="number">00</span><span class="symbol">:</span><span class="number">00</span>    
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># /var/tmp/iOSRERootDaemonTester</span>
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># Connection to 192.168.1.101 closed by remote host.</span>
<span class="constant">Connection</span> to <span class="number">192.168</span>.<span class="number">1.101</span> closed.
snakeninnys-<span class="constant">MacBook</span><span class="symbol">:Code</span> snakeninny<span class="variable">$ </span>ssh root<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">101</span>
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment"># grep iOSRE /var/log/syslog</span>
<span class="constant">May</span> <span class="number">11</span> <span class="number">16</span><span class="symbol">:</span><span class="number">36</span><span class="symbol">:</span><span class="number">01</span> <span class="constant">FunMaker</span>-<span class="number">5</span> rootdaemond[<span class="number">20</span>]<span class="symbol">:</span> <span class="symbol">iOSRE:</span> reboot
<span class="constant">May</span> <span class="number">11</span> <span class="number">16</span><span class="symbol">:</span><span class="number">36</span><span class="symbol">:</span><span class="number">58</span> <span class="constant">FunMaker</span>-<span class="number">5</span> rootdaemond[<span class="number">20</span>]<span class="symbol">:</span> <span class="symbol">iOSRE:</span> rootdaemond is launched!
<span class="constant">FunMaker</span>-<span class="number">5</span><span class="symbol">:~</span> root<span class="comment">#</span>
</code></pre><p>它神奇的运行了。</p>
<h2 id="第四部分_结论">第四部分 结论</h2><p>事实上，在iOS或者OSX上，后台进程和代理程序远比这篇文章中描述的要复杂的多。我强烈建议大家看一下下面相关的文章。再次强调，后台进程是一个强大的工具，但它是一把双刃剑，在你决定使用它之前，你最好非常了解自己接下来将要做什么，然后小心的使用它。谢谢阅读。</p>
<p>相关阅读：</p>
<ol>
<li><a href="http://en.wikipedia.org/wiki/Daemon_(computing" target="_blank" rel="external">http://en.wikipedia.org/wiki/Daemon_(computing</a>)</li>
<li><a href="https://www.chrisalvares.com/blog/7/creating-an-iphone-daemon-part-1/" target="_blank" rel="external">https://www.chrisalvares.com/blog/7/creating-an-iphone-daemon-part-1/</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/launchctl.1.html" target="_blank" rel="external">https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/launchctl.1.html</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html" target="_blank" rel="external">https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/Manpages/man5/launchd.plist.5.html" target="_blank" rel="external">https://developer.apple.com/library/mac/documentation/Darwin/Reference/Manpages/man5/launchd.plist.5.html</a></li>
</ol>
<p>2014.5.22注：<br>com.iosre.rootdaemond.plist文件必须拥有644权限，否则示例后台进程将不会运行。</p>
]]></content>
    <summary type="html">
    <![CDATA[翻译《Run a daemon (as root) on iOS》]]>
    
    </summary>
    
      <category term="System Security" scheme="http://cubernet.cn/blog/tags/System-Security/"/>
    
      <category term="Theos" scheme="http://cubernet.cn/blog/tags/Theos/"/>
    
      <category term="daemon" scheme="http://cubernet.cn/blog/tags/daemon/"/>
    
      <category term="iOS" scheme="http://cubernet.cn/blog/tags/iOS/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Theos介绍]]></title>
    <link href="http://cubernet.cn/blog/theos1/"/>
    <id>http://cubernet.cn/blog/theos1/</id>
    <published>2014-08-04T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:19.000Z</updated>
    <content type="html"><![CDATA[<p>最近由于工作原因，需要了解iOS越狱开发相关的一些技术。之前虽然有接触过iOS开发，不过都是基于苹果公开的API，相对于越狱开发还是一头雾水。于是打开Google，开始找寻我需要的资料。经过一段时间的查阅，发现iOS越狱开发相关的资料实在太少，并且比较杂乱，甚至即使在安装时遇到的问题都要花费很长的时间去搜索解决办法。虽说现在项目已经接近尾声，当初的很多步骤细节已经记得不清楚，不过我还是尽力回顾整理一下，对自己来说是一种知识的巩固，或许还能帮上别人的一点小忙。</p>
<a id="more"></a>
<h2 id="开发环境">开发环境</h2><p>首先，要开启一段iOS越狱开发之旅的你，最好有一定的Objective-C基础，Objective-C是苹果开发的唯一官方语言，虽说越狱开发也可以采用Lua语言开发的Wax框架，但我相信了解Objective-C总归不是一件坏事。</p>
<p>其次，如果你有一台Mac，那么基本的开发环境以及iOS的SDK都会随着XCode的安装而解决。如果你是一位Linux上的geek，那么你只需要运行这段脚本【<a href="http://https://gist.github.com/kirb/2353599" target="_blank" rel="external">点击下载</a>】，就可以安装Toolchain和Theos来完成基本开发环境的搭建。如果你是Windows的fans，那……暂时我还没找到解决办法。</p>
<p>由于我是在Mac上进行的开发，所以下面的内容都是默认在Mac上。</p>
<h2 id="常用框架">常用框架</h2><p>iOS越狱开发常用的框架有两个，一个是Theos；</p>
<blockquote>
<p>Theos is a cross-platform suite of development tools for managing, developing, and deploying iOS software without the use of Xcode.——iphonedevwiki</p>
<p>Theos是一个跨平台的开发工具套件，用于在没有Xcode的情况下管理、开发、部署iOS软件。——iphonedevwiki</p>
</blockquote>
<p>另外一个是iOSOpenDev。</p>
<blockquote>
<p>iOSOpenDev is an open-source project that sets up the iOS SDK to allow open development in Xcode of jailbreak-type projects not supported nor allowed by default and provides Xcode templates for building common jailbreak-type projects and the various tools needed for such development.——iphonedevwiki</p>
<p>iOSOpenDev是一个开源项目，它使开发者可以在Xcode中开发默认情况下不支持的越狱项目，并且提供越狱开发中需要的模板和工具。——iphonedevwiki</p>
</blockquote>
<p>以上是这两款工具在iphonedevwiki中给出的解释以及我个人的翻译。简单点说，采用Theos开发时需要自己管理makefile文件等，界面没有在Xcode中友好；iOSOpenDev则是基于Xcode创建模板和编译打包，对于不熟悉makefile的同学可能更倾向使用它。不过我本人更喜欢Theos，感觉更高效直观，而且在安装iOSOpenDev时遇到一系列未知错误，好像是和OS X及Xcode的版本相关，所以一直在用Theos，虽然我也不熟悉makefile，活到老学到老嘛：）。</p>
<h2 id="Theos安装及使用">Theos安装及使用</h2><p>说了这么多，下面开始看下Theos的安装及使用。</p>
<p>从Theos的库中下载框架到本地：</p>
<pre><code>git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/DHowett/theos /<span class="keyword">opt</span>/theos
</code></pre><p>你可以将其保存在本地的任何位置，不过推荐使用默认的/opt/theos。</p>
<p>除此之外，你还需要安装<code>ldid</code>和<code>dpkg</code>，这两个工具是签名和打包时必须的。推荐通过Macports安装dpkg：</p>
<pre><code>sudo port <span class="keyword">install</span> dkpg
</code></pre><p>默认的Theos中，很多苹果私有的头文件都没有包含在下载包中，这时推荐下载rpetrich已经打包好的头文件库（当然也可以用class-dump自己去获取），下载好解压在<code>$THEOS/include</code>文件夹下即可。<a href="https://github.com/rpetrich/iphoneheaders" target="_blank" rel="external">点击下载</a></p>
<p>这时就可以开始我们的第一个Theos应用了。</p>
<ul>
<li><p>设置环境变量：</p>
<pre><code><span class="keyword">export</span> THEOS=<span class="regexp">/opt/</span>theos
</code></pre></li>
<li><p>进入存放项目的文件夹下，创建示例工程：</p>
<pre><code><span class="label">$THEOS</span>/bin/nic.<span class="keyword">pl</span>
</code></pre></li>
<li><p>这时需要我们选择使用哪种模板：</p>
<pre><code><span class="type">application</span><span class="comment">--&gt; 普通的应用程序</span>
library<span class="comment">--&gt;库文件</span>
preference_bundle<span class="comment">--&gt;设置束</span>
tool <span class="comment">--&gt;后台程序</span>
tweak<span class="comment">--&gt;外挂程序</span>
</code></pre></li>
<li><p>之后输入工程名、包名等参数即可完成初始化工作。</p>
</li>
<li>网上有很多tweak程序的helloworld版本，即在开机时弹出一个框，显示helloworld，大家可以google一下。</li>
<li>在编码完成之后就可以编译打包然后安装到手机上测试了。</li>
<li><p>如果你的测试iPhone上安装了ssh，那么只需要在makefile或者系统变量中添加THEOS_DEVICE_IP=192.168.x.xxx（你的IP），然后执行下面这条命令就可以自动完成编译、打包、安装了：</p>
<pre><code><span class="built_in">make</span> <span class="keyword">package</span> install
</code></pre></li>
</ul>
<p>这时会提示你输入ssh密码，默认的密码是<code>alpine</code>。</p>
<p>Theos默认的要求非常严格，经常会因为warning而报错，无法安装测试。这时在makefile头部添加’GO_EASY_ON_ME=1’即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[iOS越狱开发]]>
    
    </summary>
    
      <category term="System Security" scheme="http://cubernet.cn/blog/tags/System-Security/"/>
    
      <category term="Theos" scheme="http://cubernet.cn/blog/tags/Theos/"/>
    
      <category term="iOS" scheme="http://cubernet.cn/blog/tags/iOS/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客再次更换主题]]></title>
    <link href="http://cubernet.cn/blog/another-new-theme/"/>
    <id>http://cubernet.cn/blog/another-new-theme/</id>
    <published>2014-08-02T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:31.000Z</updated>
    <content type="html"><![CDATA[<p>无意中看到<a href="http://esoftmobile.com" target="_blank" rel="external">esoftmobile</a>的博客，对他的博客主题有种一见钟情的感觉，可惜到github上一看源码才发现，原来esoftmobile是基于node.js来实现的那套主题。由于实在喜爱，虽夜已深，但决定模仿那个主题，自己操刀仿一个过来。</p>
<a id="more"></a>
<p>说干就干。由于之前自己亲手做过一个主题，所以对jekyll的这一套东西已经比较熟悉，噼里啪啦在键盘上乱敲了一顿之后，cmd+R，我看着屏幕笑了笑，已经达到我预期的效果了。</p>
<p>这时再抬起头，发现不知道什么时候已然天亮。</p>
<p>手上的bong开始震动，提醒我该起床了。=_=</p>
<p>这套模板在模仿esoftmobile主题的基础上又做了些许的修改，如果有喜欢之前那套主题的同学(样式见这篇<a href="http://cubernet.github.io/new-theme/" target="_blank" rel="external">博文</a>的截图)可以从github上下载我博客源码，用_layout目录下标注<code>备份</code>的文件替换在用的文件即可。这个主题做的修改大概包括：</p>
<ul>
<li>在色调和布局上较之前做了很大改动；</li>
<li>增加了首页<code>显示更多</code>功能；</li>
<li>去掉了博文目录的悬浮导航；</li>
<li>保留了背景音乐播放器，如果有背景音乐的文章，在文章题目下有背景音乐<code>PLAY</code>字样，点击可播放；</li>
<li>增加了对<code>友言</code>评论插件的支持，在设置中可以切换选择使用’友言’或<code>多说</code>或<code>disqus</code>；</li>
<li>去掉了<code>分享</code>按钮；</li>
<li>访问统计由<code>百度统计</code>改为<code>gostats</code>(不过访问统计被清零了，好伤心T T)；</li>
</ul>
<hr>
<p>8月7日更新：</p>
<ul>
<li>增加了洋葱头表情 <img src="http://cubernet.cn/assets/smilies/10.gif" id="smiley"></li>
<li>to be continued…💪💪💪</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[给自己的博客写了一个新主题]]>
    
    </summary>
    
      <category term="博客主题" scheme="http://cubernet.cn/blog/tags/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[时光不老，我们不散]]></title>
    <link href="http://cubernet.cn/blog/bieli/"/>
    <id>http://cubernet.cn/blog/bieli/</id>
    <published>2014-07-27T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:24.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>人生浪急滩险<br>走来不易<br>最后值得珍重的<br>不过是你我的情义</p>
<p>——祝小兔</p>
</blockquote>
<p>这篇文章本来是<a href="http://cubernet.github.io/libie" target="_blank" rel="external">离别</a>的姊妹篇，从url链接中也看的出来，原准备的名字叫<code>别离</code>。当初觉得，毕业了，有聚有散，有人离开，也有人归来。相同的两个字，次序不同，意义竟也不同。<a id="more"></a></p>
<p>某人<img src="http://cubernet.cn/assets/smilies/14.gif" id="smiley">当时看了文章后问我，为什么没有提及她。其实，那些没有被提及的，不是因为在我本科的四年生活中毫无分量，而是因为，你们不在我离别的<code>队列</code>里。<img src="http://cubernet.cn/assets/smilies/32.gif" id="smiley">好吧，我承认程序猿的本质被我暴露了。</p>
<p>后来想想，别离或许不能准确表达我内心的想法，所以将题目改成现在的这个。【背景音乐也非常的切题 :) 】</p>
<hr>
<p>这个暑假没有回家，于是也亲身经历了一把“辞旧迎新”的感觉。整个夏天校园里都时不时会有家长出现，最初是来参加孩子毕业典礼的家长，后来是带孩子提前来熟悉校园的家长。食堂一如既往的开始翻修。Oh，不，准确的说是食堂外围开始翻修，这样新生到来时，不至于输在第一印象上。那条黑色的狗依然每天在主楼前面乘凉，而我们的生活却一直没有止步。</p>
<hr>
<p>肉肉同学结束了一个月的博士楼生活，搬进了单位的职工宿舍。不舍的情绪就像空气一样弥漫在身边，但似乎又不容易那么被发现。刚搬走的那几天，只是突然的不想说话。晚上开门回去，总下意识地觉得进错了家。那声“你回来啦”，听不到了。</p>
<p>不舍却也欣慰。</p>
<p>因为我终于看到她在这片现在还既不属于我更不属于她的土地上，重新有了自己的朋友圈，有了自己的工作，有了自己的轨迹。在那些被爱情滋润不到的地方，这一次，重新被填满了。</p>
<p>除了欣慰，更多的是感动。</p>
<p>前几天在空间里看到羊蛋和小波快结婚了。很替他们高兴。我只想说，我想回去参加你们的婚礼。这样的婚姻是被祝福的。正如肉肉一无反顾的来到成都，对我来说，不仅仅是感动，更是一种钦佩，或者，更是一种责任。</p>
<p>这种责任不是拿来在类似于父亲节给叔叔发的短信里一样用来口头承诺的。我更愿意用行动去证明。</p>
<p>当然啦，平淡的生活总归需要一些小矛盾来调节一下。有时候双方实在找不到什么毛病，就会因为一些党派立场、民族大义的问题产生争执。这个时候，争执的内容和结果早已不重要，安心“享受”过程。<img src="http://cubernet.cn/assets/smilies/28.gif" id="smiley"></p>
<p>哈哈，开玩笑啦。毕竟和谐社会，还是和谐点好。</p>
<p>总之，很幸运能遇到一个愿意付出这么多也这么优秀的你，可能所有程序猿的共同特点的都是嘴笨心细，很多话很多事都一直呆呆的藏在心里。我们一起吃遍成都的大街小巷，一起体验生活中的各种点点滴滴。</p>
<p>爷爷在短信里说，你们会很幸福。<img src="http://cubernet.cn/assets/smilies/1.gif" id="smiley"></p>
<p>我也这么觉得。</p>
<hr>
<p>记得肉肉同学去参加同事聚会的那天晚上，无意打开微信刷新一下，看见阿姨十二点半还在更新状态。</p>
<p>可怜天下父母心啊。</p>
<p>因为今年暑假没回去，爸爸妈妈决定过来找我。</p>
<p>想想我一年轻汉子在屋里吹空调，让两位长辈不远千里过来看我，心里还是有一种说不出来的滋味。</p>
<p>不仅仅是激动和开心。</p>
<p>不知出于何种目的<img src="http://cubernet.cn/assets/smilies/30.gif" id="smiley">，也不知是经过何种途径<img src="http://cubernet.cn/assets/smilies/23.gif" id="smiley">，更不知是因为哪次比赛<img src="http://cubernet.cn/assets/smilies/32.gif" id="smiley">，毕业之后，家里莫名收到学校发来祝贺我信安大赛获奖的喜报。</p>
<p>当然，这里想说的重点是，爸爸在空间里发的一段话。</p>
<p>也许还是在谈高考的事情？说实话我也就是在当时知道成绩的那几天郁闷了一下，很快就坦然了。感觉当年高中的成绩就好像现在的房价，虽然虚高不下，但终归有遭不住的一天，回归到本来的面目。电子科大是我很好的选择，这也是为什么四年后我再次选择它的原因。</p>
<p>这里很适合我。</p>
<p>我很喜欢这里。</p>
<p>亦或是因为在我身上的期望太大了？那就待我负重远行一万里，让你们扬眉吐气。</p>
<hr>
<p>最近一直处于一种焦躁的忙碌中。所谓忙碌，是因为觉得自己有很多事情要做。而所谓焦躁，是因为自己不知道该不该去做。</p>
<p>最终还是在没有任何老师或者学长的指导下，凭自己的判断和喜好定了博士期间的方向。定之前的那几天想了很多，经常一整个晚上一整个晚上的处于写代码、看书、思考的循环中，一不小心就天亮了，然后抱着地主头眯上一会儿，起来去实验室。我给自己选择了一个别人眼中最痛苦的方向，也不知道自己能不能坚持下去。跟很多人聊天，大家都说这个方向可能根本就没什么论文可发。</p>
<p>但，这又怎样呢？</p>
<p>我还是义无返顾的选择了。</p>
<p>另外两位小伙伴的加入给了我信心，我也相信我自己可以坚持。</p>
<p>今天中午碰巧和陈博士一起吃饭。</p>
<p>路上我问，博士，你这么优秀的秘诀是什么？</p>
<p>他说，找准一个方向，然后猛操，不要想太多。</p>
<p>那一刻，觉得暗淡了这么久的天，</p>
<p>晴了。</p>
<p>我想，我等的，就是这么一句话。</p>
<p>我想，等我的，也是这么一句话。</p>
<p><img src="http://cubernet.cn/assets/smilies/12.gif" id="smiley"></p>
]]></content>
    <summary type="html">
    <![CDATA[本科毕业前的感言]]>
    
    </summary>
    
      <category term="life" scheme="http://cubernet.cn/blog/tags/life/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[离别]]></title>
    <link href="http://cubernet.cn/blog/libie/"/>
    <id>http://cubernet.cn/blog/libie/</id>
    <published>2014-06-27T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:35.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>华灯再上，离别的已是自己。 ——Cubernet</p>
</blockquote>
<p>一觉醒来就要去参加毕业典礼，心里有种莫名的感觉，总觉得这一切来的有点始料未及，呵，我就要毕业了。</p>
<a id="more"></a>
<p>其实一路走来，毕业早已不是第一次经历的事情。小学、初中、高中，每一个阶段都有毕业，或隆重或平常，它们都标志着一段旧生活的结束和另一段新生活的开始。</p>
<p>只是人都是安于现状的。所以我们疯狂的留念，疯狂的纪念。其实，我们不是害怕忘记彼此，而是害怕失去自己曾经拥有的那些过去。</p>
<p>我也是害怕离别的。</p>
<p>因为离别当头，总是会有止不住的过往回忆。</p>
<hr>
<h2 id="回忆篇">回忆篇</h2><p>四年前，迎新的校车把我从火车站接到了学校，下车的第一眼看到的是学生活动中心，不知为何，当时给了我极差的第一印象。第一个晚上一个人睡在寝室里，满脑子想的都是要不回去补习吧，明年换个学校。。。不过后来一想，既来之则安之，时间久了说不定会慢慢发现它的好。果然现在觉得它其实还不错。是的，我现在觉得<code>电子科技大学</code>还不错，虽然它依旧听起来像个专科。</p>
<p>可能天生不是做学生活动的料，从最初不愿参加任何学生会的面试，到最后勉强加入分团委，事后觉得，大一一年的学生工作给我带来的可能更多是教训和反思，也使我慢慢认识到，原来我对官场上那一套“做法”有多么的深恶痛绝，我不想让自己太早沾染上那些腔调，于是果断急流勇退。（PS，我觉得雷*在任时的分团委还是很温馨的，虽然他抱怨当时水，其实挺好的啦）</p>
<p>当然，更多的时间是疯狂的加入各种社团，加入各种工作室、俱乐部，发传单、搞活动，每天生活充实到不行。如果现在要我用四个字来概括那个时候的话，那就是</p>
<p><code>一事无成</code>。</p>
<p>好在至少醒悟了一点，那就是，学长都是骗人的。</p>
<p>同我一起考来成都的，还有刘靖跟宝铁。虽然不在同一个学校，好在离得不远，所以每隔一段时间就出来聚聚，聊聊伤心事，再吹吹牛皮。一不小心就这么四年过去了，刘靖要去香港，还真是有点舍不得。</p>
<p>大三的时候王凯大鹏他们十几个人赶来成都过中秋，刚好又对上王凯生日。十几个人就那么在路边摊一直喝啊喝啊，一直到冰洁都喝成一滩烂泥了。那段回忆真是美好啊，不知道以后还有没有这样的机会了。</p>
<p>其实我这四年几乎没怎么在成都玩过，也没吃过多少正宗的成都美食，可能是见的少，所以就只能对铁板烧烤铁板炒饭情有独钟。这方面，我相信逼哥跟我有同感。</p>
<p>逼哥跟我军训时就站在一起，那个时候还不知道我俩是老乡，没想到后来竟在一间屋子里睡了三年，说了那么多交心交肺的话。当然，绝大多数都是在<code>旺角烧烤</code>。说好的走之前再去喝一顿呢，你趁我在北京竟然发只发了条微信就回山西了。不过我想到以后可能还要靠梁局长罩着，也只能默默的在心里骂句FUCK YOU。</p>
<p>相比之下，铭铭和建行就不太喜欢那个烧烤。带他们去过一次，结果两个人都没吃high。可能是没有旺角烧烤存在的缘故，跟铭铭每天形影不离却一直都是三脚踢不出一个屁，我们两个四年对话的总和可能都没这篇流水账的字数多。但默契还是有的。铭铭走中，那种见死不救崩了怪队友的中；建行打野，那种20分钟裸出一把跳得打野；Peace上单，那种一头扎进对面野区半个小时不出来的上单；我跟路人走下，那种5分钟补5个刀的下。有句话好像是说，网吧五连坐，从来没赢过。我想说，赢不赢都很快乐。以后的日子里可能不再有时间一起dota，但dota已在心里，偶尔看看dota视频，也会想起你们。</p>
<p>刘学不打dota，其实什么游戏都不打，只看电影，什么电影都看。刘学是我见过的最好的老好人，没有之一。突然想起前几天那么晚回去没带钥匙，打电话吵醒你帮我开门，真是抱歉。好人有好报，我一直觉得这话不假。</p>
<p>相反，马哥和超哥真是两个坏透了的人，可劳资还就是喜欢跟你们打交道。毕业旅行和毕业聚餐你们两个各自错过了一场。不过我在不同的地点跟你们两个说了同样的话，不知道酒醒之后你们还记得不。我还是很期待能一起做点事。</p>
<p>说起做点事，毕业旅行的时候跟刚哥喝到凌晨三点半，第一次觉得懂了他，那天说过的那些话，可能这辈子都不会再跟我说了，但我觉得说一次，就已经是朋友，是好朋友了，对不对。</p>
<p>我觉得好朋友就是那种不必一起分享所有的开心，却可以随时陪你分担所有的难过的人。好朋友可能不经常联系，但随叫随到。</p>
<p>可是，高中那一帮人，海龟、三儿、孙鹏、嘉琪、华仔、地主等等，你们他妈的也太久不联系了吧！</p>
<p>对了，去杭州耍的照片我好像一直忘记给你了孙学霸，你以后成大器了，不会就因为这个就不帮我了吧。。。</p>
<p>好像回忆的有些久远了，又好像都是最近的事，脑子乱了，就不去想它了。</p>
<h2 id="感谢篇">感谢篇</h2><p>好像只有那些取得卓越成就的人才有资格说，感谢谁谁谁曾经对我的帮助，才使得我取得今天的成就。</p>
<p>可是我想说，虽然我依旧像四年前一样一事无成，我还是想因一些事对一些人表达一些感谢。</p>
<p>由近及远，最应该感谢的是志瑜兄。虽说直博是个大坑，但没有你，我还真没这个资格去享受这个大坑。我这个人不善于当面在口头上表达一些感谢，当时的一顿饭更不足以代表我的谢意，这么说吧，这个人情，一辈子去还。</p>
<p>再有就是实验室了吧，大一大二在汤老师的实验室，以及后来张老师的实验室，里面的老师、师兄都在各方面给了我极大的帮助。</p>
<p>感谢跟我室友过或者同学过的人，我是个喜欢懒床翘课毛病多的人，感谢你们帮我签到喊我上课替我考试代我买票，没有你们，我一个人走不到今天。</p>
<h2 id="遗憾篇">遗憾篇</h2><p>任何一段时间中，总会有一些遗憾。</p>
<p>比如还是没有完成从一个明显的胖子到不明显的胖子的转型。</p>
<p>比如还是没有养成经常锻炼身体的习惯。</p>
<p>比如没有趁学生价多去游玩几个景区。</p>
<p>比如没有学会说四川话。</p>
<p>比如。。。其实还有很多。</p>
<p>我想说，最遗憾的是，没有遇到一个超级团结的集体，可能是实验班的同学都太过个性鲜明而难以互相融合。不过这不影响国软是<code>邦清班</code>，是一个超牛逼的集体的事实。过程已然如此，我只是希望未来的路上，每一颗星星在忙于闪耀的同时，能牵一牵彼此的手。</p>
<p>当然，遗憾虽有，但不后悔。</p>
<hr>
<p>今天去领博士通知书，老师再三核对照片来确认是否来本人带领，边看边说，“怎么感觉你好小啊，是本人吗？”</p>
<p>我在心中默念，我是还小啊，因为未来的路还长。</p>
]]></content>
    <summary type="html">
    <![CDATA[本科毕业前的感言]]>
    
    </summary>
    
      <category term="life" scheme="http://cubernet.cn/blog/tags/life/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[落电台音乐批量下载]]></title>
    <link href="http://cubernet.cn/blog/luo/"/>
    <id>http://cubernet.cn/blog/luo/</id>
    <published>2014-06-15T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:48.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.luoo.net" target="_blank" rel="external">落电台</a>是我很喜欢的一个电台，也曾经在日志中不止一次的推荐过这个电台。这个网站上的音乐、文字、图片，无一不让我陶醉。</p>
<blockquote>
<p>在本科四年中那段最奋斗最辛苦的日子，<code>落网</code>陪我一路走过。那些清早起来，听着电台开始一天编码的生活，是最充实最美丽的回忆。——感谢<code>落网</code></p>
</blockquote>
<p>可能是太过于喜欢，进而会变的依赖。在许多没有网的时候也希望能够有<code>落网</code>陪伴，于是萌生了将电台音乐下载到本地的想法（只是为了本地播放，希望大家也不要拿来商用）。</p>
<a id="more"></a>
<p>说干就干。</p>
<p>简单看下<code>落网</code>的网站结构，会发现基本格式都是<code>主网址/music/期刊编号</code>，而每一期的歌曲地址则是通过js代码动态加载的。于是一个简单的办法就是，先遍历每一期，然后将js代码动态加载的歌曲地址筛选出来，然后批量下载。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#期刊页面链接生成方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(num)</span>:</span></span><br><span class="line">    url = <span class="string">'http://www.luoo.net/music/'</span></span><br><span class="line">    <span class="keyword">return</span> url + getNum(num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readsrc</span><span class="params">(src)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = urllib2.urlopen(src)</span><br><span class="line">        content = url.read()</span><br><span class="line">        <span class="keyword">return</span> content</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'readsrc error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"><span class="comment">#歌曲详情js代码提取方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSongs</span><span class="params">(content)</span>:</span></span><br><span class="line">    p = re.compile(<span class="string">r'"title":"(?P&lt;title&gt;.*?)","artist":"(?P&lt;artist&gt;.*?)","album":"(?P&lt;album&gt;.*?)","mp3":"(?P&lt;mp3&gt;.*?)"'</span>,re.M)</span><br><span class="line">    r = p.finditer(content)</span><br><span class="line">    <span class="keyword">if</span> r:</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure>
<p>最后增加了提取期刊名并按照期刊号归类，并将其改为命令行工具，使用方法如下：</p>
<pre><code>-------------------------------------------------------------------------------

    This program downloads music from www.luo.net . 
    Options include: 
      --version : Prints the version number 
      --help    : Display this help
      --a       : Download all music from the first vol
      -v<span class="annotation">[&lt;vol number&gt;]</span>      : Download the specified vol
      -r<span class="annotation">[&lt;rank of music&gt;]</span>   : Download the specified music
      -p<span class="annotation">[&lt;filepath&gt;]</span>        : The filepath where <span class="keyword">to</span> save music

---------------------------------------------------------------------------------
</code></pre><p>最终实现效果如下图：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-06-16-luo-2.png-blogpic" alt="image"></p>
<p>完整源码地址：<a href="https://github.com/Cubernet/luoo" target="_blank" rel="external">点击下载</a>       </p>
]]></content>
    <summary type="html">
    <![CDATA[批量下载落电台www.luoo.net的音乐]]>
    
    </summary>
    
      <category term="Python" scheme="http://cubernet.cn/blog/tags/Python/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[谈编码]]></title>
    <link href="http://cubernet.cn/blog/encode/"/>
    <id>http://cubernet.cn/blog/encode/</id>
    <published>2014-06-14T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:54.000Z</updated>
    <content type="html"><![CDATA[<p>偶然获知阮一峰老师的博客文集上线了，十年（2004-2013）的思想漫游，100篇精华文章，20万字。一直很喜欢阮一峰老师的博客，也从他的博客中学到了很多东西。推荐大家有空去他的博客<a href="http://www.ruanyifeng.com" target="_blank" rel="external">阮一峰的网络日志</a>看看，更推荐大家购买一份电子版文集好好品读，<a href="http://www.ruanyifeng.com/blog/2014/05/my_blog_book.html" target="_blank" rel="external">文集介绍及购买地址</a>。</p>
<a id="more"></a>
<p>下面进入今天的正题，谈谈平时常见的几种编码。</p>
<h2 id="URL编码">URL编码</h2><p>URL只允许使用US-ASCII字符集中的可打印字符。URL编码方案主要用于对扩展ASCII字符集中的任何有问题的字符进行编码，使其可通过HTTP安全传输。任何URL编码的字符都以%为前缀，其后是这个字符的两个十六进制ASCII代码。</p>
<p>当攻击Web应用程序时，如果需要将以下字符当做数据插入HTTP请求中，渗透测试员必须对它们进行URL编码。</p>
<blockquote>
<p>空格  %  ？  &amp;  =  ；  +  #</p>
</blockquote>
<h2 id="Unicode编码">Unicode编码</h2><p>Unicode是一种为支持全世界所使用的各种编写系统而设计的字符编码标准，它采用各种编码方案，其中一些可用于表示Web应用程序中的不常见字符。</p>
<p>16位Unicode编码的工作原理与URL编码类似。为通过HTTP进行传输，16位Unicode编码的字符以%u为前缀，其后是这个字符的十六进行Unicode码点。例如：</p>
<ul>
<li>%u2215代表/；</li>
</ul>
<p>UTF-8是一种长度可变的编码标准，它使用一个或几个字节表示每个字符。为通过HTTP进行传输，UTF-8编码的多字节字符以%为前缀，其后用十六进制表示每个字节。</p>
<p>攻击Web应用程序时，之所以要用到Unicode编码，主要在于有时可用它来破坏输入确认机制。如果输入过滤阻止了某些恶意表达式，但随后处理输入的组件识别Unicode编码，就可以使用各种标准与畸形的Unicode编码避开过滤。</p>
<h2 id="HTML编码">HTML编码</h2><p>HTML编码是一种用于表示问题字符以将其安全并入HTML文档的方案。有许多字符具有特殊的含义，并被用于定义文档结构而非其内容。为了安全使用这些字符，并将其用在文档内容中，就必须对其进行HTML编码。</p>
<p>HTML编码定义了大量HTML实体来表示特殊的字面量字符，例如：</p>
<blockquote>
<ul>
<li><code>&amp;quot;</code>代表<code>&quot;</code>;</li>
<li><code>&amp;lt;</code>代表<code>&lt;</code>;</li>
<li><code>&amp;gt;</code>代表<code>&gt;</code>。</li>
</ul>
</blockquote>
<p>此外，任何字符都可以使用它的十进制ASCII码进行HTML编码，例如：</p>
<blockquote>
<p><code>&amp;#34;</code>代表<code>&quot;</code>；</p>
</blockquote>
<p>或者使用十六进制的ASCII码，例如：</p>
<blockquote>
<p><code>&amp;#x22;</code>代表<code>&quot;</code>；</p>
</blockquote>
<h2 id="Base64编码">Base64编码</h2><p>Base64编码仅用一个可打印的ASCII字符就可以安全转换任何二进制数据，它常用与对电子邮件附件进行编码，使其通过SMTP安全传输。它还可用于在基本HTTP验证机制中对用户证书进行编码。</p>
<p>Base64编码将输入数据转换成3哥字节块。每个块被划分为4段，每段6个数据位。这6个数据位有64种不同的排列组合，因此每个段可使用一组64个字符表示。Base64编码使用以下字符集，其中只包含可打印的ASCII字符：</p>
<blockquote>
<p><strong>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</strong></p>
</blockquote>
<p>如果最后的输入数据块不能构成3段输出数据，就用一个或者两个等号(=)不足输出。</p>
<h2 id="十六进制编码">十六进制编码</h2><p>许多应用程序在传送二进制数据时直接使用十六进制编码，用ASCII字符表示十六进制数据块。</p>
]]></content>
    <summary type="html">
    <![CDATA[谈一谈平时常见的几种编码]]>
    
    </summary>
    
      <category term="编码" scheme="http://cubernet.cn/blog/tags/%E7%BC%96%E7%A0%81/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[给博客添加了自己的主题]]></title>
    <link href="http://cubernet.cn/blog/new-theme/"/>
    <id>http://cubernet.cn/blog/new-theme/</id>
    <published>2014-06-08T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:57.000Z</updated>
    <content type="html"><![CDATA[<p>之前一直使用WP搭建博客，后来觉得WP实在过于庞大，那些高大上的功能对我这样一个<code>手残</code>来说实在是没有用武之地，所以投靠到了Github。</p>
<a id="more"></a>
<p>刚来的时候，花了很长时间在网上寻找博客主题，筛选的条件只有一个，简洁。于是就有了之前的那个主题，那个模板修改自 <a href="http://yonsm.net/" target="_blank" rel="external">Yonsm</a> 的博客，在这里再次表示感谢。 看久之后，总觉得之前的模板更多的只是符合我对简洁的要求，并没有达到简洁美，于是在欢度六一之后，决定亲自写一套模板，只有这样才能最大程度的达到预期的样式效果。</p>
<p>总结一下，这套模板在之前的基础上大概做了以下修改：</p>
<ul>
<li>首先是色调和对比度的修改，增加了黑色元素及背景色深浅过度；</li>
<li>将左侧导航栏修改为浮动，在header中增加了固定的导航栏；</li>
<li>在右侧增加了博文目录的悬浮导航，如果文章较短没有分块，则不显示目录导航；</li>
<li>去掉了之前丑陋的背景音乐播放器，如果有背景音乐的文章，在文章题目下有背景音乐<code>PLAY</code>字样，点击可播放；</li>
<li>增加了对disqus评论插件的支持，在设置中可以切换选择使用<code>多说</code>或<code>disqus</code>；</li>
<li>增加了<code>分享</code>按钮，可以将感兴趣的或觉得好的博文、图片或部分文字（鼠标划选想分享的文字，自动弹出分享按钮）分享到常见社区；</li>
<li>一些CSS效果细节上的修改，如对超链接a、h3、span等元素的自定义样式</li>
<li>to be continued…💪💪💪</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[给自己的博客写了一个新主题]]>
    
    </summary>
    
      <category term="博客主题" scheme="http://cubernet.cn/blog/tags/%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[让4S重新飞速运行起来]]></title>
    <link href="http://cubernet.cn/blog/iPhoneSpeedUp/"/>
    <id>http://cubernet.cn/blog/iPhoneSpeedUp/</id>
    <published>2014-04-24T16:00:00.000Z</published>
    <updated>2015-04-15T18:18:59.000Z</updated>
    <content type="html"><![CDATA[<p>作为一名奋战在第一线的程序猿，如果跟开发无关，那么对新系统的抵抗力几乎为0，所以当初毫不犹豫的升级了iOS7。年初越狱工具放出之后，也在第一时间进行了越狱。倒不是对破解的免费软件有什么需求，说白了就是三个字，爱折腾。</p>
<p>不过在用了一段时间之后，不得不承认iOS7在增加了许多功能改进和提高用户UI体验的同时，对系统内存和电池续航都提出了更大的需求。就我自己的4S而言，电池续航方面，保持正常频率的电话短信微信微博，基本半天就得充电。流畅度方面<br><a id="more"></a>更是糟糕，闪退现象极其严重，如果想运行一个稍微大一点的游戏，就需要将后台的其他应用全部关闭。</p>
<p>忍无可忍却又换不起5S的屌丝只好自己动手丰衣足食了。</p>
<p>仔细分析一下，升级手机或者降级系统这两个最easy的途径都行不通。那么还有什么别的因素影响续航和流畅度呢？</p>
<p>下面是我想到的一些：</p>
<hr>
<h2 id="卸载360">卸载360</h2><p>当初为了省事，越狱后直接安装了360，一些常用的功能都已经集成。但说实话，其实很多功能我都没有用，那么当我内存吃紧的时候，当然要吧这些无用的插件删除了。不过360不提供定制功能，只好把它整个卸载。【这里没有黑360的意思，360的垃圾短信过滤还是做得很不错的，我至今也没有找到一款在这方面可以相媲美的插件，如果你们知道，欢迎告诉我：）】</p>
<h4 id="深度清理系统垃圾">深度清理系统垃圾</h4><p>手机用久了，就会产生很多的系统垃圾，包括很多缓存文件、日志文件等。隔一段时间清理一下，就当是给系统洗洗澡啦。</p>
<h2 id="把系统语言设置为英文">把系统语言设置为英文</h2><p>把系统语言设置为英文后，打开AppStore和Cydia的速度简直快的让人不敢相信。当然，打开很多其他系统应用的速度都有明显改善。</p>
<p>其次，从字体显示的角度来说，切换成英文后，看起来还是美观了不少，毕竟iOS设计时肯定是从英文开始的。</p>
<p>这里对于我们中文用户来说，有一个问题就是，切换成英文后，通讯录联系人无法按照拼音首字母排序查询了，比较的不方便。</p>
<p>常见的有两种解决办法。</p>
<ul>
<li>一是在保存每个联系人的姓名时，同时保存中文和拼音，即每个联系人添加汉语拼音发音，这样就可以正常显示了；如果你觉得手动一个一个添加工作量太大，那么这里有一个批量添加的程序或许可以帮到你 <a href="https://github.com/lexrus/PhoneticContacts" target="_blank" rel="external">PhoneticContacts</a>。</li>
<li>另外一种就是先将iPhone 切换为中文，找到/System/Library/Frameworks/AddressBook.framework 将zh<em>CN.lproj目录下的 ABContactSections.plist 文件替换到English.lproj目录和其他两个zh</em>文件夹下，再切换其他语言；当然这种方法的前提是你的手机已经越狱。</li>
</ul>
<p>当然，如果你觉得自己无法适应一个英文版的操作系统。那。。。那你一定是土豪，恩。土豪直接换手机就好啦。</p>
<h2 id="安装一款电池保护软件">安装一款电池保护软件</h2><p>现在有很多电池保护软件，个人感觉差别都不是很大，选择一款你喜欢的安装。推荐安装这类软件的理由是，它可以帮你或多或少的养成良好的充电习惯，对电池的保养肯定是有好处的。</p>
<h2 id="最后推荐几款我在用的插件">最后推荐几款我在用的插件</h2><ul>
<li><strong>CCMeters</strong>    一款在通知中心显示当前手机运行参数的插件，包括cpu使用率，网速，内存等</li>
<li><strong>CCQuick</strong>    一款控制中心快捷设置的插件</li>
<li><strong>Chinese Calendar</strong>    一款在通知中心显示日历的插件，包括农历和节日，个人感觉还是很实用的</li>
<li><strong>FakeCarrier</strong>    一款修改运营商名称的插件</li>
<li><strong>Kuaidial</strong>    一款电话增强软件，包括接通震动，响一声来电过滤等</li>
<li><strong>OSLite7</strong>    一款一键清理应用程序产生的缓存与临时文件的插件</li>
</ul>
<p>以上插件都有对应的iOS7版本，亲测iOS7.0.4可用，如果你下载的版本不能兼容，请耐心寻找最新版本。</p>
<hr>
<p>折腾了一番之后，感觉系统流畅了许多，续航基本可以保证一天一充，更重要的是之前常用的功能现在还有，甚至多了一些新的功能，如果你跟我有同样的问题，不妨也按照我的方法试一试。</p>
]]></content>
    <summary type="html">
    <![CDATA[给运行ios7的iPhone4S加速]]>
    
    </summary>
    
      <category term="iPhone4S" scheme="http://cubernet.cn/blog/tags/iPhone4S/"/>
    
      <category term="ios7" scheme="http://cubernet.cn/blog/tags/ios7/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[牵着手，一起走]]></title>
    <link href="http://cubernet.cn/blog/oneyear/"/>
    <id>http://cubernet.cn/blog/oneyear/</id>
    <published>2014-04-22T16:00:00.000Z</published>
    <updated>2015-04-15T18:19:06.000Z</updated>
    <content type="html"><![CDATA[<p><img alt="image" src="http://7xikui.com1.z0.glb.clouddn.com/2014-04-23-oneyear.JPG-blogpic" style="width:220px"></p>
<div style="text-align:center"><br><br><p>一年很长</p><br><br><p>我们了解，磨合，争吵，置气</p><br><br><p>一年很短</p><br><br><p>我们拥抱，热恋，旅行，玩耍</p><br><br><p>你总说</p><br><br><p>我是你最好的遇见</p><br><br><a id="more"></a><br><br><p>而我说</p><br><br><p>我遇见了最好的你</p><br><br><p>这一年中的快乐或不开心都超越过去的总和</p><br><br><p>这一年承载了我们彼此生命中最重要的决定</p><br><br><p>当岁月一年又一年褪去爱情华丽的外表</p><br><br><p>我相信剩下的</p><br><br><p>是绝对的信任和满满的爱</p><br><br><p>2014.04.23#一周年快乐，宝贝#</p><br><br><br></div>





]]></content>
    <summary type="html">
    <![CDATA[和宝贝老婆在一起一周年纪念日]]>
    
    </summary>
    
      <category term="纪念日" scheme="http://cubernet.cn/blog/tags/%E7%BA%AA%E5%BF%B5%E6%97%A5/"/>
    
      <category term="生活归档" scheme="http://cubernet.cn/blog/categories/%E7%94%9F%E6%B4%BB%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[给jekyll添加静态搜索]]></title>
    <link href="http://cubernet.cn/blog/staticsearch/"/>
    <id>http://cubernet.cn/blog/staticsearch/</id>
    <published>2014-04-17T16:00:00.000Z</published>
    <updated>2015-04-15T18:19:09.000Z</updated>
    <content type="html"><![CDATA[<p>使用jekyll在github上搭建博客之后，无论是从写作的舒适度还是维护的方便程度上来讲都比之前有了很大的提升，不过一直觉得美中不足的是缺少一个搜索功能。由于整个博客都是静态的，因此很难做到像WordPress那种使用数据库来提供强大的搜索功能。不过退而求其次，给jekyll添加静态搜索，实现基本的功能还是有可能的。</p>
<a id="more"></a>
<p>通过在Google搜索一番之后，发现了<a href="https://github.com/slashdotdash/jekyll-lunr-js-search" target="_blank" rel="external">jekyll-lun-js-search</a>这个插件，可以实现jekyll的静态搜索。话不多说，按照说明文件中的步骤开始动手配置。</p>
<p>配置完成，满怀期待在搜索框输入了一个单词，结果。。。是的，没有任何反应。</p>
<p>重新检查确认配置无误之后继续在网上寻找是不是有人也遇到类似的问题。果然有一个教程里提到这个插件有一些bug。窃喜，一一修改。结果。。。是的，依旧没有任何反应。</p>
<p>无耐操刀自己上，在又修改了几处代码中的bug之后还是未能配置成功。此时距当初发现这个插件已经过去了六七个小时。</p>
<p>这时只好修改思路，通过去找一些添加了搜索功能的jekyll博客，然后查看他的代码实现。果然发现了另外一个，而且这个插件使用非常简单，也无需配置那么多的文件，即<a href="https://github.com/christian-fei/Simple-Jekyll-Search" target="_blank" rel="external">Simple-Jekyll-Search</a></p>
<hr>
<p>由于两个插件都提供了很详细的配置说明，我这里就不再重复。</p>
<p>从实现的角度来说，静态搜索的大概思路都是提取文章html页面的关键内容，保存在一个文件中，然后通过遍历这个文件来返回搜索结果。但这两个插件在具体实现时还有所不同。jekyll-lun-js-search这款插件是通过一段ruby代码来生成保存有文章页面关键内容的文件。由于是通过ruby代码提取，因此这个文件的内容比较丰富，可以包含博客文章的正文，也就是说实现了全文搜索。但是Simple-Jekyll-Search这款插件是通过简单的jekyll语法来提取内容，因此在这个文件中无法包含文章正文，因为通过jekyll语法提取的博客正文会包含html代码。所以简单配置的背后，带来的是对全文搜索的舍弃。</p>
<p>另外，在调试第一个插件的过程时，虽然最后仍旧没有解决这个问题，而且我自己也不知道原因所在，但还是对jekyll的工作细节有了更多的了解，也知道了config文件中【<strong>安全</strong>】选项所代表的具体含义，第一次接触并修改了ruby代码。。等等。感觉收获还是很大的。</p>
<hr>
<p>额。。。好吧，我成功的把一篇技术文写成了流水账。</p>
]]></content>
    <summary type="html">
    <![CDATA[jekyll 静态搜索]]>
    
    </summary>
    
      <category term="jekyll" scheme="http://cubernet.cn/blog/tags/jekyll/"/>
    
      <category term="static search" scheme="http://cubernet.cn/blog/tags/static-search/"/>
    
      <category term="静态搜索" scheme="http://cubernet.cn/blog/tags/%E9%9D%99%E6%80%81%E6%90%9C%E7%B4%A2/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[虾米音乐app破解]]></title>
    <link href="http://cubernet.cn/blog/xiami/"/>
    <id>http://cubernet.cn/blog/xiami/</id>
    <published>2014-03-30T16:00:00.000Z</published>
    <updated>2015-04-15T18:17:24.000Z</updated>
    <content type="html"><![CDATA[<p>前几天登录虾米音乐，首页赫然提醒，建议用户将虾米账号迁移到淘宝上，以后用淘宝账号登录虾米。说实在的，当时心瞬间就凉了。就像当初排斥多看阅读迁移到小米账号上一样，我讨厌把自己在互联网上辛苦打造出来的一小片净土和BAT挂上勾。</p>
<p>说到这里，想起个“笑话”。</p>
<a id="more"></a>
<p><code>有人在逛淘宝搜索宝贝时，不小心输入错误，搜成了“棺材”。本以为只是一次手误，删了重来就可以。结果没想到的是，从此以后他每次再登录淘宝时，首页到处都是向他推荐棺材的。更过分的是，他的微博等各种社交空间上也到处都是推荐棺材的。欲哭无泪。</code></p>
<p>这就是天下账号大一统的后果，当然也是BAT希望看到的效果。</p>
<hr>
<p>言归正传。今天在看雪上注意到Hopper Disassembler这么一款软件，据说是mac平台上反编译神器，所以下下来体验一下。碰巧又在52上看到一个破解虾米音乐的例子，想到那让我心凉的虾米音乐，于是决定就对它下手了。</p>
<p>这次的任务是破解mac系统的虾米音乐app，使普通用户也可以享用VIP服务。</p>
<p>首先来一张破解之前的截图，未付费用户是无法享受高品质的。</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-1.png-blogpic" alt="image"></p>
<p>然后打开HD，选择<code>Read Executable</code>-&gt;<code>应用程序</code>-&gt;<code>虾米音乐</code>-&gt;<code>Contents</code>-&gt;<code>MacOS</code>-&gt;<code>Xiami</code></p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-2.png-blogpic" alt="image"></p>
<p>等待几秒钟，待完全载入分析完成后，可以看到如下界面：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-3.png-blogpic" alt="image"></p>
<p>左边一栏列出了该程序中包含的函数，迅速浏览一遍，发现了一个<code>isVIP</code>的函数，从名字上猜测，这个函数是用来判断用户是不是VIP的（也可再搜索栏中直接搜isVip），点击左侧函数名，右侧便会显示出该函数对应的汇编指令。【这一步的截图丢失了，所以下面这张图是从52上搬过来的，可能稍微有点模糊】</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-4.png-blogpic" alt="image"></p>
<p>从平时使用这款app的经验上可以得知，这款虾米客户端的功能比较简单，稍微复杂的操作都需要跳转到网页版进行，所以猜想客户端的逻辑验证也比较简单。</p>
<p>从<code>isVIP</code>这个函数中我们可以看到，首先对rbp压栈，然后做了几次赋值操作后，将rbp出栈返回。那么这个函数的实际工作过程有没有可能是：给用户一个是否为VIP的标识，然后通过向服务器查询，将返回值赋值给这个标识并返回。为了验证这个猜想，我们只需将rbp归零再加1，使其值为true，最后返回，如下图：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-5.png-blogpic" alt="image"></p>
<p>最后通过<code>File</code>-&gt;<code>Produce New Executable</code>来生成新的Xiami文件，替换原来的，双击运行，看到如下效果图：</p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-6.png-blogpic" alt="image"></p>
<p><img src="http://7xikui.com1.z0.glb.clouddn.com/2014-03-31-xiami-7.png-blogpic" alt="image"></p>
<p>看来我们猜测的没有错，现在已经可以享受高品质的音乐了。Have fun :)</p>
<hr>
<p>PS：由于是第一次在Mac上做相关的工作，所以觉得很新鲜很有趣，便记录下来，大神勿喷。</p>
<p>在此过程中，感谢52的xiaobai和NSTL卓博的大力帮助。</p>
]]></content>
    <summary type="html">
    <![CDATA[破解mac版的虾米音乐app]]>
    
    </summary>
    
      <category term="Hopper Disassembler" scheme="http://cubernet.cn/blog/tags/Hopper-Disassembler/"/>
    
      <category term="软件破解" scheme="http://cubernet.cn/blog/tags/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="技术归档" scheme="http://cubernet.cn/blog/categories/%E6%8A%80%E6%9C%AF%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
</feed>